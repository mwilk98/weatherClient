{"version":3,"sources":["components/currentWeather/WeatherItem.js","components/Form/Form.js","components/Functions/CalDate.js","components/Functions/CalTime.js","components/Functions/CalCelsius.js","components/Functions/CalWindSpeed.js","components/currentWeather/ForecastDailyItem.js","components/currentWeather/ForecastHourlyItem.js","components/currentWeather/CurrentWeather.js","Menu/Button.js","Menu/MenuItems.js","Menu/Dropdown.js","Menu/Navbar.js","components/UserPanel/UserWeatherItem.js","components/UserPanel/UserPanel.js","components/AirCondition/AirConditionItem.js","components/AirCondition/AirCondition.js","components/Compare/CompareCurrentWeatherItem.js","components/Compare/CompareForecastItem.js","components/Compare/Compare.js","components/SignUp/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["weatherIcons","1","2","3","4","5","6","7","conditionColors","WeatherItem","element","selectD","data","options","city","country","image","weather","date","time","temp","tempMax","tempMin","tempFeel","pressure","wind","clouds","humidity","sunrise","sunset","aqi","color","pm2_5","error","errorCity","content","className","src","width","height","alt","style","background","Math","floor","to","type","onClick","bind","Form","props","onSubmit","submit","value","placeholder","onChange","handler","CalDate","timezone","Date","year","getFullYear","month","getMonth","getDate","CalTime","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","CalCelsius","CalWindSpeed","ForecastDailyItem","ForecastHourlyItem","API_key","CurrentWeather","nextProperty","Property","Elements","newIndex","id","setState","console","log","prevProperty","defaultWeather","cityName","state","fetch","then","response","ok","Error","json","getForecastDaily","coord","lat","lon","getForecastHourly","getAirQuality","sys","dt","description","main","temp_max","temp_min","feels_like","speed","all","i","nightIcons","catch","err","prevState","getWeather","e","preventDefault","forecastDailyElements","forecastHourlyElements","typeF","daily","max","min","wind_speed","timezone_offset","forecastElements","tpyeOfForecast","tempData","tempTime","tempPress","tempHumid","hourly","dataTemperature","labels","datasets","label","fill","backgroundColor","borderColor","dataPressure","dataHumiity","inputHandler","target","setForecast","forecast","selectData","chartDataSource","undefined","pressurre","hourlyProperty","plugins","legend","display","maintainAspectRatio","scales","y","ticks","font","size","stepSize","beginAtZero","x","airConditions","list","components","this","map","fde","backgroundImage","disabled","length","React","Component","0","8","9","10","11","12","200","201","202","210","211","212","221","230","1230","231","232","300","1300","301","302","310","1310","311","312","313","314","321","500","1500","501","502","503","504","511","520","1520","521","522","531","600","1600","601","602","611","612","1612","613","615","1615","616","620","1620","621","622","701","711","721","731","741","751","761","762","771","781","800","1800","801","1801","802","1802","803","1803","804","Button","MenuItems","title","path","cName","Dropdown","useState","click","setClick","item","index","Navbar","dropdown","setDropdown","closeMobileMenu","onMouseEnter","window","innerWidth","onMouseLeave","deleteW","dateToJs","UserPanel","Lid","setLid","useForm","register","handleSubmit","errors","formState","cityWeatherList","setcityWeatherList","property","setProperty","Axios","defaults","withCredentials","loginStatus","setLoginStatus","useEffect","get","loggedIn","user","username","alert","deleteWeather","post","location","reload","values","weatherState","name","maxLength","required","message","UserWeatherItem","AirConditionItem","air","co","nh3","no","no2","o3","pm10","so2","AirCondition","getAir","submitHandler","responseAirQuality","r","responseAir","condition","CompareCurrentWeatherItem","compare","source","weatherComp","tempComp","pressureComp","windComp","CompareForecastItem","API_key_OWM","API_key_WA","API_key_w","Compare","setSource","getForecastDailyOWM","getForecastDailyWA","getForecastDailyTI","getForecastDailyVC","getForecastDailyWB","getDefaultCompare","compareCurrentElements","getWeatherWeatherApi","getWeatherTommorowIo","getWeatherVisualcrossing","getWeatherWeatherbit","currentProperty","errorOWM","getWeatherCompare","ForecastDailyElements","current","last_updated","text","temp_c","pressure_mb","wind_kph","code","forecastday","day","maxtemp_c","mintemp_c","avghumidity","timelines","startTime","weatherConditions","intervals","weatherCode","temperature","pressureSurfaceLevel","windSpeed","cloudCover","currentConditions","datetime","icon","sealevelpressure","wspd","conditions","maxt","mint","cloudcover","ob_time","pres","wind_spd","max_temp","min_temp","1000","1003","1006","1009","1030","1063","1066","1069","1072","1087","1114","1117","1135","1147","1150","1153","1168","1171","1180","1183","1186","1189","1192","1195","1198","1201","1204","1207","1210","1213","1216","1219","1222","1225","1237","1240","1243","1246","1249","1252","1255","1258","1261","1264","1273","1276","1279","1282","4201","4001","4200","6201","6001","6200","6000","4000","7101","7000","7102","5101","5000","5100","5001","8000","2100","2000","1001","1102","1101","1100","SignUp","setUsername","password","setPassword","setX","setY","z","setZ","history","useHistory","loginBtn","push","minlength","createBrowserHistory","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc4af51c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst WeatherItem = ({element, selectD: selectD }) => \r\n{\r\n    \r\n    const\r\n    {\r\n        data,\r\n        options,\r\n        city,\r\n        country,\r\n        image,\r\n        weather,\r\n        date,\r\n        time,\r\n        temp,\r\n        tempMax,\r\n        tempMin,\r\n        tempFeel,\r\n        pressure,\r\n        wind,\r\n        clouds,\r\n        humidity,\r\n        sunrise,\r\n        sunset,\r\n        aqi,\r\n        color,\r\n        pm2_5,\r\n        error,\r\n        errorCity\r\n    } = element;\r\n    \r\n    let content = null\r\n\r\n    if(!error && city && !errorCity){\r\n        content = (\r\n            <div >\r\n                <div className=\"conditions\" >\r\n                    <div className=\"conditionsMain\" >\r\n                        <h1>{city} {country}</h1>\r\n                        <p>{date} {time}</p>\r\n                        <p><img src={image} width=\"90\" height=\"90\" alt=\"img\"/></p>\r\n                        <p>{weather}</p>\r\n                    </div>\r\n                    <div className=\"conditionsTemp\" >\r\n                        <p><img src={weatherIcons[5]} width=\"20\" height=\"20\" alt=\"img\"/> {temp}&deg;</p>\r\n                        <p><img src={weatherIcons[5]} width=\"20\" height=\"20\" alt=\"img\"/>odczuwalna {tempFeel}&deg;</p>\r\n                        <p>\r\n                            <img src={weatherIcons[5]} width=\"20\" height=\"20\" alt=\"img\"/>max:{tempMax}&deg; \r\n                            <img src={weatherIcons[5]} width=\"20\" height=\"20\" alt=\"img\"/>min:{tempMin}&deg;      \r\n                        </p>  \r\n                    </div>\r\n                    <div className=\"conditionsOther\" >\r\n                        <p>\r\n                            <img src={weatherIcons[1]} width=\"20\" height=\"20\" alt=\"img\"/>{clouds}% \r\n                            <img src={weatherIcons[4]} width=\"20\" height=\"20\" alt=\"img\"/>{humidity}%\r\n                            <p><img src={weatherIcons[6]} width=\"20\" height=\"20\" alt=\"img\"/>{pressure} hPa</p>  \r\n                            <p><img src={weatherIcons[7]} width=\"20\" height=\"20\" alt=\"img\"/>{wind}km/h</p>\r\n                            </p>\r\n                    </div>\r\n                    <div className=\"conditionsSun\" >\r\n                        <p>\r\n                            <img src={weatherIcons[2]} width=\"20\" height=\"20\" alt=\"img\"/>{sunrise} \r\n                            <img src={weatherIcons[3]} width=\"20\" height=\"20\" alt=\"img\"/>{sunset}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"conditionsAqi\"  style={\r\n                                                    { \r\n                                                        background: conditionColors[color]\r\n                                                    }\r\n                    }>\r\n                        <p>Jakość powietrza:</p>\r\n                        <p>  {aqi}</p>\r\n                        <p>({Math.floor((pm2_5/35)*100)}%)</p>\r\n                        <p>\r\n                            <Link to='/air-condition' >\r\n                                <button type=\"button\">\r\n                                   Szczegóły\r\n                                </button>\r\n                            </Link>\r\n                        </p>\r\n                        \r\n                        </div>\r\n                        </div>\r\n                        <p>\r\n                            <button  onClick={selectD.bind(null,1)}> Temperatura</button>\r\n                            <button  onClick={selectD.bind(null,2)}> Ciśnienie</button>\r\n                            <button  onClick={selectD.bind(null,3)}> Wilgotność</button>\r\n                        </p>\r\n                        <div className=\"chart\" >\r\n                        <p><Line data={data} options={options} width={\"30%\"} /></p>\r\n                        </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    return (\r\n    <div className=\"currentWeatherMain\">\r\n        {error ? <h1>Brak danych dla podanego maista - {city} nie istnieje lub zostało błędnie wpisane!</h1> : content}\r\n        {errorCity ? <h1>Usługa jest aktualnie niedostępna - error API</h1> : null}\r\n    </div>\r\n    )};\r\n\r\n    const weatherIcons = \r\n    {\r\n        1:'/images/clouds.png',\r\n        2:'/images/sunrise.png',\r\n        3:'/images/sunset.png',\r\n        4:'/images/humidity.png',\r\n        5:'/images/temp.webp',\r\n        6:'/images/pressure.png',\r\n        7:'/images/wind.png',\r\n    };\r\n\r\n    const conditionColors = \r\n    {\r\n        1:'green',\r\n        2:'lightgreen',\r\n        3:'yellow',\r\n        4:'red',\r\n        5:'purple',\r\n    };\r\n    \r\nexport default WeatherItem;","import React from \"react\";\r\n\r\n\r\nconst Form = props => \r\n{\r\n    return(\r\n        <form onSubmit={props.submit}>\r\n            <input\r\n                type=\"text\"\r\n                value={props.value}\r\n                placeholder=\"Miasto\"\r\n                onChange={props.handler}\r\n            />\r\n            <button> Wyszukaj </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","function CalDate(time,timezone)\r\n{\r\n\r\n    var date = new Date(time*1000+timezone*1000-3600000);\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth()+1;\r\n    var day = date.getDate();\r\n\r\n    var daytime = day + '-' + month + '-' + year;\r\n\r\n    return daytime;\r\n\r\n}\r\n\r\nexport default CalDate;","function CalTime(time,timezone)\r\n{\r\n    var date = new Date(time*1000+timezone*1000-3600000);\r\n    // Hours part from the timestamp\r\n    var hours = date.getHours();\r\n    // Minutes part from the timestamp\r\n    var minutes = \"0\" + date.getMinutes();\r\n    // Seconds part from the timestamp\r\n    var seconds = \"0\" + date.getSeconds();\r\n    \r\n    // Will display time in 10:30:23 format\r\n    var daytime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\r\n\r\n    return daytime;\r\n}\r\n\r\nexport default CalTime;","function CalCelsius(temp)\r\n{\r\n\r\n        let cell= Math.floor(temp-273.15);\r\n\r\n        return cell;\r\n}\r\n\r\nexport default CalCelsius;","function CalWindSpeed(wind)\r\n{\r\n\r\n        let cell= Math.floor(wind*3.6)\r\n\r\n        return cell;\r\n}\r\n\r\nexport default CalWindSpeed;","import React from 'react'\r\n\r\nconst ForecastDailyItem=({element})=>\r\n{\r\n    const\r\n    {\r\n        image,\r\n        weather,\r\n        date,\r\n        tempMax,\r\n        tempMin,\r\n        pressure,\r\n        wind,\r\n        clouds,\r\n        humidity,\r\n        sunrise,\r\n        sunset\r\n    } = element;\r\n    return ( \r\n        <div className=\"forecastCard\">\r\n            <div className=\"card\" >\r\n                <div className=\"face face1\">\r\n                    <div className=\"content\">\r\n                        <p>{date}</p>\r\n                        <p><img src={image} width=\"90\" height=\"90\" alt=\"img\"/></p>\r\n                        <h3>{weather}</h3>\r\n                        <p><img src={weatherIcons[5]} width=\"20\" height=\"20\" alt=\"img\"/>max:{tempMax}&deg; <img src={weatherIcons[5]} width=\"20\" height=\"20\" alt=\"img\"/>min:{tempMin}&deg;</p> \r\n                        </div>\r\n                        </div>\r\n                        <div className=\"face face2\">\r\n                            <div className=\"content\">\r\n                                <p><img src={weatherIcons[1]} width=\"20\" height=\"20\" alt=\"img\"/>{clouds}% <img src={weatherIcons[4]} width=\"20\" height=\"20\" alt=\"img\"/>{humidity}%</p>\r\n                                <p></p>\r\n                                <p><img src={weatherIcons[2]} width=\"20\" height=\"20\" alt=\"img\"/>{sunrise} <img src={weatherIcons[3]} width=\"20\" height=\"20\" alt=\"img\"/>{sunset}</p>  \r\n                                <p><img src={weatherIcons[6]} width=\"20\" height=\"20\" alt=\"img\"/>{pressure} hPa</p>  \r\n                                <p><img src={weatherIcons[7]} width=\"20\" height=\"20\" alt=\"img\"/>{wind}km/h</p>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst weatherIcons = \r\n{\r\n    1:'/images/clouds.png',\r\n    2:'/images/sunrise.png',\r\n    3:'/images/sunset.png',\r\n    4:'/images/humidity.png',\r\n    5:'/images/temp.webp',\r\n    6:'/images/pressure.png',\r\n    7:'/images/wind.png',\r\n};\r\n\r\nexport default ForecastDailyItem;","import React from 'react'\r\n\r\nconst ForecastHourlyItem=({element})=>\r\n{\r\n    const\r\n    {\r\n        image,\r\n        weather,\r\n        date,\r\n        time,\r\n        temp,\r\n        tempFeel,\r\n        pressure,\r\n        wind,\r\n        clouds,\r\n        humidity\r\n    } = element;\r\n    return ( \r\n        <div className=\"forecastCard\">\r\n            <div className=\"card\" >\r\n                <div className=\"face face1\">\r\n                    <div className=\"content\">\r\n                        <p>{date}</p>\r\n                        <p>{time}</p>\r\n                        <p><img src={image} width=\"90\" height=\"90\" alt=\"img\"/></p>\r\n                        <h3>{weather}</h3>\r\n                        <p><img src={weatherIcons[5]} width=\"20\" height=\"20\" alt=\"img\"/>{temp}&deg; </p>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"face face2\">\r\n                            <div className=\"content\">\r\n                                <p><img src={weatherIcons[1]} width=\"20\" height=\"20\" alt=\"img\"/>{clouds}% <img src={weatherIcons[4]} width=\"20\" height=\"20\" alt=\"img\"/>{humidity}%</p>\r\n                                <p></p>\r\n                                <p><img src={weatherIcons[5]} width=\"20\" height=\"20\" alt=\"img\"/>Odczuwalna:{tempFeel}&deg;</p>  \r\n                                <p><img src={weatherIcons[6]} width=\"20\" height=\"20\" alt=\"img\"/>{pressure} hPa</p>  \r\n                                <p><img src={weatherIcons[7]} width=\"20\" height=\"20\" alt=\"img\"/>{wind}km/h</p>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst weatherIcons = \r\n{\r\n    1:'/images/clouds.png',\r\n    2:'/images/sunrise.png',\r\n    3:'/images/sunset.png',\r\n    4:'/images/humidity.png',\r\n    5:'/images/temp.webp',\r\n    6:'/images/pressure.png',\r\n    7:'/images/wind.png',\r\n};\r\n\r\nexport default ForecastHourlyItem;","import React from 'react'\r\nimport WeatherItem from './WeatherItem';\r\nimport Form from '../Form/Form'\r\nimport CalDate from '../Functions/CalDate';\r\nimport CalTime from '../Functions/CalTime';\r\nimport CalCelsius from '../Functions/CalCelsius';\r\nimport CalWindSpeed from '../Functions/CalWindSpeed';\r\nimport ForecastDailyItem from './ForecastDailyItem';\r\nimport ForecastHourlyItem from './ForecastHourlyItem';\r\nimport './Forecast.css';\r\nimport './CurrentWeather.css';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\n\r\nconst API_key=\"157d33f8987d245bc6a1997408e90015\"\r\n//const localTime = new Date().toLocaleString()\r\n\r\nclass CurrentWeather extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        \r\n        super(props)\r\n        this.state=\r\n        {\r\n            value:\"\",\r\n            city:\"\",\r\n            country:\"\",\r\n            aqi:undefined,\r\n            pm2_5:undefined,\r\n            image:undefined,\r\n            background:undefined,\r\n            weather:undefined,\r\n            temp:undefined,\r\n            tempMax:undefined,\r\n            tempMin:undefined,\r\n            tempFeel:undefined,\r\n            pressurre:undefined,\r\n            wind:undefined,\r\n            lat:undefined,\r\n            lon:undefined,\r\n            clouds:undefined, \r\n            humidity:undefined,\r\n            sunrise:undefined,\r\n            sunset:undefined,\r\n            content:undefined,\r\n            forecastDailyElements:[],\r\n            forecastHourlyElements:[],\r\n            forecastElements:[],\r\n            Property: undefined,\r\n            hourlyProperty: undefined,\r\n            forecast:true,\r\n            tpyeOfForecast:undefined,\r\n            error:false,\r\n            tempData:[],\r\n            tempPress:[],\r\n            tempHumid:[],\r\n            tempTime:[],\r\n            data :{\r\n                labels: [],\r\n                datasets: [\r\n                  {\r\n                    label: '',\r\n                    data: [],\r\n                    fill: false,\r\n                    backgroundColor: 'rgb(0, 0, 0)',\r\n                    borderColor: 'rgba(0, 0, 0, 0)',\r\n                  },\r\n                ],\r\n            },\r\n            dataTemperature :{\r\n                labels: [],\r\n                datasets: [\r\n                  {\r\n                    label: '',\r\n                    data: [],\r\n                    fill: false,\r\n                    backgroundColor: 'rgb(0, 0, 0)',\r\n                    borderColor: 'rgba(0, 0, 0, 0)',\r\n                  },\r\n                ],\r\n            },\r\n            dataPressure :{\r\n                labels: [],\r\n                datasets: [\r\n                  {\r\n                    label: '',\r\n                    data: [],\r\n                    fill: false,\r\n                    backgroundColor: 'rgb(0, 0, 0)',\r\n                    borderColor: 'rgba(0, 0, 0, 0)',\r\n                  },\r\n                ],\r\n            },\r\n            dataHumiity :{\r\n                labels: [],\r\n                datasets: [\r\n                  {\r\n                    label: '',\r\n                    data: [],\r\n                    fill: false,\r\n                    backgroundColor: 'rgb(0, 0, 0)',\r\n                    borderColor: 'rgba(0, 0, 0, 0)',\r\n                  },\r\n                ],\r\n            },\r\n            options : {\r\n                plugins: {\r\n                    legend: {\r\n                        display: true,\r\n                        labels: {\r\n                            color: 'black'\r\n                        }\r\n                    }\r\n                },\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                    y: {  \r\n                        ticks: {\r\n                          color: \"black\", \r\n                          font: {\r\n                            size: 10,\r\n                          },\r\n                          stepSize: 1,\r\n                          beginAtZero: true\r\n                        }\r\n                      },\r\n                      x: { \r\n                        ticks: {\r\n                          color: \"black\", \r\n                        \r\n                          font: {\r\n                            size: 14 \r\n                          },\r\n                          stepSize: 1,\r\n                          beginAtZero: true\r\n                        }\r\n                    }\r\n                },\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    nextProperty = (Property,Elements) => \r\n    {\r\n        const newIndex = Property.id +1;\r\n\r\n        this.setState(\r\n        {\r\n            Property: Elements[newIndex]\r\n        });\r\n\r\n        console.log(newIndex);\r\n    };\r\n\r\n    prevProperty= (Property,Elements) => \r\n    {\r\n        const newIndex = Property.id -1;\r\n\r\n        this.setState(\r\n        {\r\n            Property: Elements[newIndex]\r\n        });\r\n    };\r\n\r\n    defaultWeather = (cityName) => \r\n    {\r\n        this.setState(state =>(\r\n        {\r\n            city:cityName,\r\n            error:false\r\n        }))\r\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityName}&lang=pl&APPID=${API_key}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }else{\r\n                this.setState(state =>(\r\n                    {\r\n                        city:state.value,\r\n                    }))\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n\r\n            this.getForecastDaily(response.coord.lat,response.coord.lon)\r\n            this.getForecastHourly(response.coord.lat,response.coord.lon)\r\n            this.getAirQuality(response.coord.lat,response.coord.lon)\r\n            this.setState(state =>(\r\n            {\r\n                city:state.city,\r\n                country:response.sys.country,\r\n                date:CalDate(response.dt,response.timezone),\r\n                time:CalTime(response.dt,response.timezone),\r\n                timezone:response.timezone,\r\n                weather:response.weather[0].description,\r\n                temp:CalCelsius(response.main.temp),\r\n                tempMax:CalCelsius(response.main.temp_max),\r\n                tempMin:CalCelsius(response.main.temp_min),\r\n                tempFeel:CalCelsius(response.main.feels_like),\r\n                pressure:response.main.pressure,\r\n                wind:CalWindSpeed(response.wind.speed),\r\n                image:weatherIcons[response.weather[0].id],\r\n                lat:response.coord.lat,\r\n                lon:response.coord.lon,\r\n                clouds:response.clouds.all, \r\n                humidity:response.main.humidity,\r\n                sunrise:CalTime(response.sys.sunrise,response.timezone),\r\n                sunset:CalTime(response.sys.sunset,response.timezone),\r\n                background:\"/images/cloudyCity.jpg\",\r\n                error:false,\r\n            }))\r\n            for(var i=0; i<12;i++){\r\n                if((this.state.time>this.state.sunset) && (this.state.time<this.state.sunrise)&&(response.weather[0].id==nightIcons[i])){\r\n                    this.setState({\r\n                        image:weatherIcons[response.weather[0].id+1000],\r\n                    })\r\n                }\r\n              }\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err)\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                errorCity:true,\r\n                city:prevState.city\r\n            }})\r\n        })\r\n    };\r\n\r\n    getWeather = (e) =>\r\n    {\r\n        \r\n        e.preventDefault()\r\n        this.setState(\r\n            {\r\n                forecastDailyElements:[],\r\n                forecastHourlyElements:[]\r\n            })\r\n          \r\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }else{\r\n                this.setState(state =>(\r\n                    {\r\n                        city:state.value,\r\n                    }))\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n            }\r\n            \r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response)\r\n            this.setState(state =>(\r\n            {\r\n                city:state.value,\r\n                country:response.sys.country,\r\n                timezone:response.timezone,\r\n                date:CalDate(response.dt,response.timezone),\r\n                time:CalTime(response.dt,response.timezone),\r\n                weather:response.weather[0].description,\r\n                temp:CalCelsius(response.main.temp),\r\n                tempMax:CalCelsius(response.main.temp_max),\r\n                tempMin:CalCelsius(response.main.temp_min),\r\n                tempFeel:CalCelsius(response.main.feels_like),\r\n                pressure:response.main.pressure,\r\n                wind:CalWindSpeed(response.wind.speed),\r\n                image:weatherIcons[response.weather[0].id],\r\n                lat:response.coord.lat,\r\n                lon:response.coord.lon,\r\n                clouds:response.clouds.all, \r\n                humidity:response.main.humidity,\r\n                sunrise:CalTime(response.sys.sunrise,response.timezone),\r\n                sunset:CalTime(response.sys.sunset,response.timezone),\r\n                background:\"/images/cloudyCity.jpg\",\r\n                error:false\r\n              }))\r\n              for(var i=0; i<12;i++){\r\n                if((this.state.time>this.state.sunset) && (response.weather[0].id==nightIcons[i])){\r\n                    this.setState({\r\n                        image:weatherIcons[response.weather[0].id+1000],\r\n                    })\r\n                }\r\n              }\r\n              this.getForecastDaily(response.coord.lat,response.coord.lon)\r\n              this.getForecastHourly(response.coord.lat,response.coord.lon)\r\n              this.getAirQuality(response.coord.lat,response.coord.lon)\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err)\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n            }})\r\n        })\r\n    };\r\n\r\n    getAirQuality(lat,lon)\r\n    {\r\n        fetch(`http://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${lon}&appid=${API_key}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n                throw Error(\"Błąd pobierania danych z API\");\r\n          })\r\n        .then(response=> response.json())\r\n        .then(response => \r\n        {\r\n            this.setState(state =>(\r\n            {\r\n                aqi:airConditions[response.list[0].main.aqi],\r\n                pm2_5:response.list[0].components.pm2_5,\r\n                color:response.list[0].main.aqi,\r\n                error:false\r\n            }))\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err)\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n            }})\r\n        })\r\n    };\r\n\r\n    getForecastDaily = (lat,lon,typeF)=>\r\n    {\r\n        this.setState(\r\n        {\r\n            forecastDailyElements:[]\r\n        })\r\n        \r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n                throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            for (var i = 0; i < 8; i++) \r\n            {\r\n                this.setState(\r\n                {\r\n                    forecastDailyElements:[...this.state.forecastDailyElements,\r\n                    {\r\n                        'id':i,\r\n                        'date':CalDate(response.daily[i].dt,this.state.timezone),\r\n                        'weather':response.daily[i].weather[0].description,\r\n                        'tempMax':CalCelsius(response.daily[i].temp.max),\r\n                        'tempMin':CalCelsius(response.daily[i].temp.min),\r\n                        'pressure':response.daily[i].pressure,\r\n                        'wind':CalWindSpeed(response.daily[i].wind_speed),\r\n                        'image':weatherIcons[response.daily[i].weather[0].id],\r\n                        'clouds':response.daily[i].clouds,\r\n                        'humidity':response.daily[i].humidity,\r\n                        'sunrise':CalTime(response.daily[i].sunrise,response.timezone_offset) ,\r\n                        'sunset':CalTime(response.daily[i].sunset,response.timezone_offset)\r\n                    }],\r\n                    \r\n                })\r\n            }\r\n            this.setState(\r\n            {\r\n                Property:this.state.forecastDailyElements[0],\r\n                forecastElements:this.state.forecastDailyElements,\r\n                tpyeOfForecast:\"Godzinowa\"\r\n            })  \r\n          })\r\n    };\r\n\r\n    getForecastHourly = (lat,lon)=>\r\n    {\r\n        this.setState(\r\n        {\r\n            forecastHourlyElements:[],\r\n            tempData:[],\r\n            tempTime:[],\r\n            tempPress:[],\r\n            tempHumid:[],\r\n        })\r\n\r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n                throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            for (var i = 0; i < 48; i++) \r\n            {\r\n                this.setState(\r\n                {\r\n                    forecastHourlyElements:[...this.state.forecastHourlyElements,\r\n                    {\r\n                        'id':i,\r\n                        'date':CalDate(response.hourly[i].dt,this.state.timezone),\r\n                        'time':CalTime(response.hourly[i].dt,response.timezone_offset),\r\n                        'weather':response.hourly[i].weather[0].description,\r\n                        'temp':CalCelsius(response.hourly[i].temp),\r\n                        'tempFeel':CalCelsius(response.hourly[i].feels_like),\r\n                        'pressure':response.hourly[i].pressure,\r\n                        'humidity':response.hourly[i].humidity,\r\n                        'wind':CalWindSpeed(response.hourly[i].wind_speed),\r\n                        'image':weatherIcons[response.hourly[i].weather[0].id],\r\n                        'clouds':response.hourly[i].clouds,\r\n                    }],\r\n                    \r\n                    tempData:[...this.state.tempData,CalCelsius(response.hourly[i].temp)],\r\n                    tempTime:[...this.state.tempTime,CalTime(response.hourly[i].dt,response.timezone_offset)],\r\n                    tempPress:[...this.state.tempPress,response.hourly[i].pressure],\r\n                    tempHumid:[...this.state.tempHumid,response.hourly[i].humidity],\r\n                    \r\n                })\r\n            this.setState(\r\n            {\r\n                Property:this.state.forecastHourlyElements[0],\r\n            })\r\n            }\r\n            this.setState(\r\n            {\r\n                dataTemperature:{\r\n                    labels: this.state.tempTime,\r\n                    datasets: [\r\n                    {\r\n                        label: 'Temperatura:',\r\n                        data: this.state.tempData,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(209, 157, 12)',\r\n                        borderColor: 'rgb(0, 0, 0)',\r\n                    },\r\n                    ],\r\n                },\r\n                dataPressure:{\r\n                    labels: this.state.tempTime,\r\n                    datasets: [\r\n                    {\r\n                        label: 'Ciśnienie:',\r\n                        data: this.state.tempPress,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(209, 157, 12)',\r\n                        borderColor: 'rgb(0, 0, 0)',\r\n                    },\r\n                ],\r\n                },\r\n                dataHumiity:{\r\n                    labels: this.state.tempTime,\r\n                    datasets: [\r\n                    {\r\n                        label: 'Wilgotność:',\r\n                        data: this.state.tempHumid,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(209, 157, 12)',\r\n                        borderColor: 'rgb(0, 0, 0)',\r\n                    },\r\n                ],\r\n                }\r\n                \r\n            })\r\n            this.setState(\r\n            {\r\n                data:this.state.dataTemperature\r\n            })\r\n          })\r\n    };\r\n\r\n    inputHandler=(e)=>\r\n    {\r\n        this.setState(\r\n            {\r\n            value:e.target.value\r\n        })\r\n    };\r\n\r\n    componentDidMount()\r\n    {\r\n        this.defaultWeather(\"Warszawa\")\r\n    };\r\n\r\n    setForecast=()=>\r\n    {\r\n        if(this.state.forecast)\r\n        {\r\n            this.setState(\r\n            {\r\n                forecast:false,\r\n                Property:this.state.forecastHourlyElements[0],  \r\n                forecastElements:[],  \r\n                forecastElements:this.state.forecastHourlyElements,\r\n                tpyeOfForecast:\"Dzienna\"\r\n            })\r\n        }\r\n        else\r\n        {\r\n            this.setState(\r\n            {\r\n                forecast:true,\r\n                Property:this.state.forecastDailyElements[0],\r\n                forecastElements:[],\r\n                forecastElements:this.state.forecastDailyElements,\r\n                tpyeOfForecast:\"Godzinowa\"\r\n            })\r\n        }\r\n    };\r\n\r\n    selectData = (chartDataSource) => {\r\n        if(chartDataSource==1)\r\n        {\r\n            this.setState({\r\n                data:this.state.dataTemperature\r\n            })\r\n        }\r\n        if(chartDataSource==2)\r\n        {\r\n            this.setState({\r\n                data:this.state.dataPressure\r\n            })\r\n        }\r\n        if(chartDataSource==3)\r\n        {\r\n            this.setState({\r\n                data:this.state.dataHumiity\r\n            })\r\n        }\r\n    };\r\n\r\n    render()\r\n    {\r\n        \r\n        if(this.state.forecast)\r\n        {\r\n            this.state.content = (\r\n                this.state.forecastDailyElements.map(fde => <ForecastDailyItem key={fde.id} element={fde} />)\r\n            )\r\n        }else{\r\n\r\n            this.state.content = (\r\n                this.state.forecastHourlyElements.map(fde => <ForecastHourlyItem key={fde.id} element={fde} />)\r\n            )\r\n        }\r\n            return(\r\n                    <div className=\"main\"   style={\r\n                                            { \r\n                                                backgroundImage: `url(\"/images/bg.jpg\")` \r\n                                            }\r\n                    }>\r\n                        <div className=\"city-form\">\r\n                            <h1>Wyszukaj miasto dla którego chcesz sprawdzić obecne warunki pogodowe oraz prognozy pogody</h1>\r\n                            <Form \r\n                                value={this.state.value}  \r\n                                handler={this.inputHandler}\r\n                                submit={this.getWeather}\r\n                            /> \r\n                        </div> \r\n                        <div className=\"current-main\">\r\n                            {this.state.city ?(\r\n                                <WeatherItem element={this.state} selectD={this.selectData}/>   \r\n                            ):null}\r\n                        </div>\r\n                        <div className=\"forecast-main\">\r\n                            {this.state.Property ?( \r\n                                <div className=\"forecast-cards\" >\r\n                                    <button className=\"left\"    style={\r\n                                                                { \r\n                                                                backgroundImage: `url(\"/images/arrow_left.png\")` \r\n                                                                }}\r\n                                            onClick={() => this.prevProperty(this.state.Property,this.state.forecastElements)} \r\n                                            disabled={this.state.Property.id === 0}\r\n                                    >\r\n                                    </button>\r\n                                    <button className=\"swap-button\"\r\n                                        onClick={() => this.setForecast()} \r\n                                    >\r\n                                        {this.state.tpyeOfForecast}\r\n                                    </button>\r\n                                    <button className=\"right\"   style={\r\n                                                                { \r\n                                                                    backgroundImage: `url(\"/images/arrow_right.png\")` \r\n                                                                }}\r\n                                            onClick={() => this.nextProperty(this.state.Property,this.state.forecastElements)} \r\n                                            disabled={this.state.Property.id === this.state.forecastElements.length-3}\r\n                                        >\r\n                                    </button>\r\n                                    <div className=\"main-cards\">  \r\n                                        <div className=\"cards-slider\">         \r\n                                            <div className=\"cards-slider-wrapper\"   style={\r\n                                                                                    {\r\n                                                                                        'transform':`translateX(-${this.state.Property.id*(100/this.state.forecastElements.length)}%)`\r\n                                                                                    }\r\n                                            }>\r\n                                                {this.state.content}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ):null}\r\n                        </div>\r\n                    </div>\r\n                )\r\n        }\r\n};\r\nconst nightIcons = {\r\n    0:230,\r\n    1:300,\r\n    2:310,\r\n    3:500,\r\n    4:520,\r\n    5:600,\r\n    6:612,\r\n    7:615,\r\n    8:620,\r\n    9:800,\r\n    10:801,\r\n    11:802,\r\n    12:803\r\n}\r\nconst weatherIcons = \r\n{\r\n    200:'/images/200.png',\r\n    201:'/images/201.png',\r\n    202:'/images/202.png',\r\n    210:'/images/210.png',\r\n    211:'/images/211.png',\r\n    212:'/images/212.png',\r\n    221:'/images/212.png',\r\n    230:'/images/230D.png',\r\n    1230:'/images/230N.png',\r\n    231:'/images/231.png',\r\n    232:'/images/232.png',\r\n    300:'/images/300D.png',\r\n    1300:'/images/300N.png',\r\n    301:'/images/301.png',\r\n    302:'/images/302.png',\r\n    310:'/images/310D.png',\r\n    1310:'/images/310N.png',\r\n    311:'/images/311.png',\r\n    312:'/images/312.png',\r\n    313:'/images/313_1.png',\r\n    314:'/images/314.png',\r\n    321:'/images/321.png',\r\n    500:'/images/500D.png',\r\n    1500:'/images/500N.png',\r\n    501:'/images/501.png',\r\n    502:'/images/502.png',\r\n    503:'/images/503.png',\r\n    504:'/images/504.png',\r\n    511:'/images/511.png',\r\n    520:'/images/520D.png',\r\n    1520:'/images/520N_1.png',\r\n    521:'/images/521_2.png',\r\n    522:'/images/522_1.png',\r\n    531:'/images/522_1.png',\r\n    600:'/images/600D.png',\r\n    1600:'/images/600N.png',\r\n    601:'/images/601.png',\r\n    602:'/images/602.png',\r\n    611:'/images/611.png',\r\n    612:'/images/612D.png',\r\n    1612:'/images/612N.png',\r\n    613:'/images/613.png',\r\n    615:'/images/615D.png',\r\n    1615:'/images/615N.png',\r\n    616:'/images/616.png',\r\n    620:'/images/620D.png',\r\n    1620:'/images/620N.png',\r\n    621:'/images/621.png',\r\n    622:'/images/622.png',\r\n    701:'/images/701_2.png',\r\n    711:'/images/701_2.png',\r\n    721:'/images/701_2.png',\r\n    731:'/images/701_2.png',\r\n    741:'/images/701_2.png',\r\n    751:'/images/701_2.png',\r\n    761:'/images/701_2.png',\r\n    762:'/images/701_2.png',\r\n    771:'/images/701_2.png',\r\n    781:'/images/701_2.png',\r\n    800:'/images/800D.png',\r\n    1800:'/images/800N.png',\r\n    801:'/images/801D.png',\r\n    1801:'/images/801N.png',\r\n    802:'/images/802D.png',\r\n    1802:'/images/802N.png',\r\n    803:'/images/803D.png',\r\n    1803:'/images/803N.png',\r\n    804:'/images/804.png',\r\n};\r\n\r\nconst airConditions = \r\n{\r\n    1:'Bardzo dobra',\r\n    2:'Dobra',\r\n    3:'Średnia',\r\n    4:'Zła',\r\n    5:'Bardzo zła',\r\n};\r\n\r\nexport default CurrentWeather;","import React from 'react'\r\nimport './Button.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport function Button(){\r\n    return(\r\n        <Link to='sign-up'>\r\n            <button className='btnMenu'>Zaloguj</button>\r\n        </Link>\r\n    )\r\n}","export const MenuItems = [\r\n    {\r\n        title: 'Stan Powietrza',\r\n        path: '/air-condition',\r\n        cName: 'dropdown-link'\r\n    },\r\n]","import React, {useState} from 'react'\r\nimport {MenuItems} from './MenuItems'\r\nimport {Link} from 'react-router-dom'\r\nimport './Dropdown.css'\r\n\r\nfunction Dropdown(){\r\n    const [click, setClick] = useState(false)\r\n\r\n    const handleClick = () => setClick(!click)\r\n\r\n    return(\r\n        <>\r\n        <ul onClick={handleClick} className= {click ? 'dropdown-menu clicked' : 'dropdown-menu'}>\r\n            {MenuItems.map((item,index) =>{\r\n                return(\r\n                    <li key={index}>\r\n                        <Link className={item.cName} to={item.path} onClick={()=>setClick(false)}>\r\n                            {item.title}\r\n                        </Link>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dropdown","import React, {useState} from 'react'\r\nimport {Button} from './Button'\r\nimport {Link} from 'react-router-dom'\r\nimport './Navbar.css'\r\nimport Dropdown from './Dropdown'\r\n\r\nfunction Navbar(){\r\n    const [click, setClick] = useState(false)\r\n\r\n    const [dropdown,setDropdown] = useState(false)\r\n\r\n    const handleClick = () => setClick(!click)\r\n\r\n    const closeMobileMenu = () => setClick(false)\r\n\r\n    const onMouseEnter = () =>{\r\n        if(window.innerWidth <960){\r\n            setDropdown(false)\r\n        }\r\n        else{\r\n            setDropdown(true)\r\n        }\r\n    }\r\n\r\n    const onMouseLeave = () =>{\r\n        if(window.innerWidth <960){\r\n            setDropdown(false)\r\n        }\r\n        else{\r\n            setDropdown(false)\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n        <nav className='navbar'>\r\n            <Link to='/' className='navbar-logo'>\r\n                Pogoda\r\n            </Link>\r\n            <div className='menu-icon' onClick={handleClick}>\r\n                <i className={click ? 'fas fa-times' : 'fas fa-bars'}/>\r\n            </div>\r\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                <li className='nav-item'>\r\n                    <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                        Strona Główna\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link to='/my-weather' className='nav-links' onClick={closeMobileMenu}>\r\n                        Moja Pogoda\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-item' \r\n                onMouseEnter={onMouseEnter} \r\n                onMouseLeave={onMouseLeave}\r\n                >\r\n                    <Link to='/services' className='nav-links' onClick={closeMobileMenu}>\r\n                        Inne <i className='fas fa-caret-down'/>\r\n                    </Link>\r\n                    {dropdown && <Dropdown/>}\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link to='/compare' className='nav-links' onClick={closeMobileMenu}>\r\n                        Porównywarka\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link to='/sign-up' className='nav-links-mobile' onClick={closeMobileMenu}>\r\n                        Zaloguj\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            <Button/>\r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\n\r\nconst ForecastDailyItem=({element, deleteW: deleteW })=>\r\n{\r\n    const \r\n    {\r\n        id,\r\n        city,\r\n        date,\r\n        time,\r\n        weather,\r\n        temp,\r\n        clouds,\r\n        humidity,\r\n        pressure,\r\n        wind,\r\n        aqi,\r\n        color\r\n    } = element;\r\n        var dateToJs = new Date(date);\r\n        dateToJs = (dateToJs.getMonth() + 1) + '-' + dateToJs.getDate() + '-' + dateToJs.getFullYear()\r\n    return ( \r\n        <div className=\"userCard\">\r\n            <div className=\"card\" >\r\n                    <div className=\"face face1\">\r\n                        <div className=\"content\">\r\n                            <p>{city}</p>\r\n                            <p>{dateToJs} {time}</p>\r\n                            {/*<p><img src={image} width=\"90\" height=\"90\" /></p>*/}\r\n                            <h3>{weather}</h3>\r\n                            <p><img src={weatherIcons[5]} width=\"20\" height=\"20\" alt=\"img\"/> {temp}&deg;</p>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"face face2\">\r\n                            <div className=\"content\">\r\n                                <p><img src={weatherIcons[1]} width=\"20\" height=\"20\" alt=\"img\"/>{clouds}% <img src={weatherIcons[4]} width=\"20\" height=\"20\" alt=\"img\"/>{humidity}%</p>\r\n                                <p></p>\r\n                                <p><img src={weatherIcons[6]} width=\"20\" height=\"20\" alt=\"img\"/>{pressure} hPa</p>  \r\n                                <p><img src={weatherIcons[7]} width=\"20\" height=\"20\" alt=\"img\"/>{wind}km/h</p>\r\n                                <p>Jakość powietrza:<p className=\"aqi\"  style={\r\n                                                                        { \r\n                                                                            color: conditionColors[color]\r\n                                                                        }\r\n                                }> {aqi}</p></p>\r\n                                <p><button type=\"submit\" className=\"submit-btn3\" onClick={deleteW.bind(null,id)}> USUN </button></p>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\nconst weatherIcons = \r\n{\r\n    1:'/images/clouds.png',\r\n    2:'/images/sunrise.png',\r\n    3:'/images/sunset.png',\r\n    4:'/images/humidity.png',\r\n    5:'/images/temp.webp',\r\n    6:'/images/pressure.png',\r\n    7:'/images/wind.png',\r\n}\r\nconst conditionColors = \r\n{\r\n    1:'green',\r\n    2:'lightgreen',\r\n    3:'yellow',\r\n    4:'red',\r\n    5:'purple',\r\n}\r\nexport default ForecastDailyItem;","import React, {useState, useEffect} from 'react';\r\nimport './UserPanel.css';\r\nimport Axios from 'axios';\r\nimport UserWeatherItem from './UserWeatherItem';\r\nimport {Link} from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nfunction UserPanel()\r\n{\r\n\r\n    const [Lid, setLid] = useState('');\r\n\r\n    const { register, handleSubmit, formState: { errors }} = useForm();\r\n  const onSubmit = (values) => {\r\n    Axios.post('https://weather-mysql-deploy.herokuapp.com/api/insert',\r\n        {\r\n            cityName:values.cityName,\r\n            date:values.date,\r\n            time:values.time,\r\n            weatherState:values.weatherState,\r\n            temp:values.temp,\r\n            clouds:values.clouds,\r\n            humidity:values.humidity,\r\n            pressure:values.pressure,\r\n            wind:values.wind,\r\n            aqi:values.aqi\r\n        });\r\n        setcityWeatherList([...cityWeatherList,{\r\n            cityName:values.cityName,\r\n            date:values.date,\r\n            time:values.time,\r\n            weatherState:values.weatherState,\r\n            temp:values.temp,\r\n            clouds:values.clouds,\r\n            humidity:values.humidity,\r\n            pressure:values.pressure,\r\n            wind:values.wind,\r\n            aqi:values.aqi\r\n        },]);\r\n        window.location.reload(false);\r\n  };\r\n\r\n\r\n    const [cityWeatherList, setcityWeatherList] = useState([]);\r\n    const [property, setProperty] = useState([]);\r\n\r\n    Axios.defaults.withCredentials = true;\r\n\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n    console.log(loginStatus);\r\n\r\n   \r\n    useEffect(()=>\r\n    {\r\n        Axios.get('https://weather-mysql-deploy.herokuapp.com/api/login').then((response)=>\r\n        {\r\n            if(response.data.loggedIn===true)\r\n            {\r\n                setLoginStatus(response.data.user[0].username);\r\n                console.log(response);\r\n            }else\r\n            {\r\n                console.log(response);\r\n                setLoginStatus(\"unlogged\");\r\n            }\r\n        });\r\n\r\n        Axios.get('https://weather-mysql-deploy.herokuapp.com/api/get')\r\n        .then((response)=>\r\n        {\r\n            \r\n                setcityWeatherList(response.data);\r\n                setProperty(response.data[0]);\r\n                console.log(response);\r\n                console.log(\"PropertyGet:\",property);\r\n            \r\n            if(response.data==\"\"){\r\n                alert(\"Błąd servera - offline\")\r\n            }\r\n            \r\n        });\r\n        \r\n        setLid(0);\r\n        setProperty(cityWeatherList[Lid]);\r\n    },[])\r\n\r\n    const deleteWeather = (id) =>\r\n    {\r\n        console.log(id);\r\n        Axios.post('https://weather-mysql-deploy.herokuapp.com/api/delete',\r\n        {\r\n            id:id\r\n        });\r\n        \r\n        window.location.reload(false);\r\n        \r\n        console.log(\"USUNIETO\");\r\n    }\r\n    const logout = () =>\r\n    {\r\n        Axios.post('https://weather-mysql-deploy.herokuapp.com/api/logout')\r\n            .then((response) =>\r\n            {\r\n            console.log(response);\r\n            if(response.data.message)\r\n            {\r\n                setLoginStatus(\"logged\");\r\n            }else\r\n            {\r\n                setLoginStatus(\"unlogged\");\r\n            }\r\n        })\r\n        Axios.get('https://weather-mysql-deploy.herokuapp.com/api/logout').then((response)=>\r\n        {\r\n            if(response.data.loggedIn===false)\r\n            {\r\n                console.log(response);\r\n                setLoginStatus(\"unlogged\");\r\n            }else\r\n            {\r\n                setLoginStatus(\"logged\");\r\n                console.log(response);\r\n            }\r\n        })\r\n        window.location.reload(false);\r\n    }\r\n    const nextProperty = () => \r\n    {\r\n        const newIndex = Lid+1;\r\n        setLid(Lid+1);\r\n        setProperty(cityWeatherList[newIndex]);\r\n\r\n        console.log(\"New index:\",newIndex);\r\n        console.log(\"Property:\",property);\r\n    }\r\n    \r\n    const prevProperty = () => \r\n    {\r\n        const newIndex = Lid-1;\r\n        setLid(Lid-1);\r\n        setProperty(cityWeatherList[newIndex]);\r\n        console.log(\"New index:\",newIndex);\r\n        console.log(\"Property:\",property);\r\n    }\r\n    if(loginStatus!==\"unlogged\")\r\n    {\r\n        return(\r\n            <div className=\"hero2\"  style={\r\n                                    { \r\n                                        backgroundImage: `url(\"/images/bg_signUp.jpg\")` \r\n                                    }\r\n            }>\r\n                <div className=\"form-box2\">\r\n                    <div className=\"login-input-group2\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n\r\n                        Miejsce\r\n                        <input type=\"text\" name = \"message\" maxLength=\"20\" className=\"input-field2\" placeholder=\"Miejsce\" required \r\n                        {...register(\"cityName\", {\r\n                            required: \"Required\",\r\n                        })}\r\n                        />\r\n                        Data\r\n                        <input type=\"date\" className=\"input-field2\" placeholder=\"Data\" required \r\n                        {...register(\"date\", {\r\n                            required: \"Required\",\r\n                        })}/>\r\n                        Godzina\r\n                        <input type=\"time\" className=\"input-field2\" placeholder=\"Godzina\" required \r\n                        {...register(\"time\", {\r\n                            required: \"Required\",\r\n                        })}/>\r\n                        Pogoda\r\n                        <td></td>\r\n                        <select {...register(\"weatherState\", {\r\n                            required: \"Required\",\r\n                        })}>\r\n                                <option value=\"Czyste Niebo\">Czyste Niebo</option>\r\n                                <option value=\"Lekkie Zachmurzenie\">Lekkie Zachmurzenie</option>\r\n                                <option value=\"Zachmurzenie\">Zachmurzenie</option>\r\n                                <option value=\"Duże Zachmurzenie\">Duże Zachmurzenie</option>\r\n                                <option value=\"Przejaśnienia\">Przejaśnienia</option>\r\n                                <option value=\"Lekki deszcz\">Lekki deszcz</option>\r\n                                <option value=\"Deszcz\">Deszcz</option>\r\n                                <option value=\"Burza\">Burza</option>\r\n                                <option value=\"Śnieg\">Śnieg</option>\r\n                                <option value=\"Mgła\">Mgła</option>\r\n                        </select>\r\n                        <td></td>\r\n                        Temperatura\r\n                        <input type=\"number\" min=\"-90\" max=\"60\" className=\"input-field2\" placeholder=\"Temperatura (°C)\" required \r\n                        {...register(\"temp\", {\r\n                            required: \"Required\",\r\n                        })}/>\r\n                        Zachmurzenie\r\n                        <input type=\"number\" min=\"0\" max=\"100\" className=\"input-field2\" placeholder=\"Zachmurzenie (%)\" required \r\n                        {...register(\"clouds\", {\r\n                            required: \"Required\",\r\n                        })}/>\r\n                        Wilgotność\r\n                        <input type=\"number\" min=\"0\" max=\"100\" className=\"input-field2\" placeholder=\"Wilgotność\" required \r\n                        {...register(\"humidity\", {\r\n                            required: \"Required\",\r\n                        })}/>\r\n                        Ciśnienie\r\n                        <input type=\"number\" min=\"850\" max=\"1100\" className=\"input-field2\" placeholder=\"Ciśnienie (hPa)\" required \r\n                        {...register(\"pressure\", {\r\n                            required: \"Required\",\r\n                        })}/>\r\n                        Wiatr\r\n                        <input type=\"number\" min=\"0\" max=\"500\" className=\"input-field2\" placeholder=\"Wiatr (km/h)\" required \r\n                        {...register(\"wind\", {\r\n                            required: \"Required\",\r\n                        })}/>\r\n                        Jakość powietrza\r\n                        <input type=\"number\" min=\"1\" max=\"5\" className=\"input-field2\" placeholder=\"Jakość powietrza (1-5)\" \r\n                        {...register(\"aqi\", {\r\n                            required: \"Required\",\r\n                        })}/>\r\n                        <input type=\"submit\" className=\"submit-btn2\" value=\"Dodaj\"/> \r\n                        {errors.message && errors.message.message}\r\n                        <button type=\"submit\" className=\"submit-btn2\" onClick={logout}> Wyloguj </button>\r\n                        </form>\r\n                    </div>\r\n                </div>   \r\n                <div className=\"user-main\">\r\n                \r\n                    <div className=\"user-cards\">\r\n                        <button className=\"left\"    style={\r\n                                                                { \r\n                                                                backgroundImage: `url(\"/images/arrow_left.png\")` \r\n                                                                }}\r\n                                                                onClick={() => nextProperty()} \r\n                                                                disabled={Lid === cityWeatherList.length-1}\r\n                                    >\r\n                                    </button>\r\n                                    <button className=\"right\"   style={\r\n                                                                { \r\n                                                                    backgroundImage: `url(\"/images/arrow_right.png\")` \r\n                                                                }}\r\n                                                                onClick={() => prevProperty()} \r\n                                                                disabled={Lid === 0}\r\n                                        >\r\n                                    </button>\r\n                        <div className=\"main-cards\">\r\n                            <div className=\"userCards-slider\">\r\n                            {property ?(\r\n                                <div className=\"userCards-slider-wrapper\"   style={\r\n                                                                            {\r\n                                                                                'transform':`translateX(-${Lid*(100/cityWeatherList.length)}%)`\r\n                                                                            }\r\n                                }>\r\n                                    {cityWeatherList.map(fde => <UserWeatherItem element={fde} deleteW={deleteWeather}/>)}\r\n                                </div>\r\n                                ):null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                \r\n                </div> \r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className=\"hero\"   style={\r\n                                    { \r\n                                        backgroundImage: `url(\"/images/bg_signUp.jpg\")` \r\n                                    }\r\n            }>\r\n                <div className=\"form-box\">\r\n                    <div className=\"login-input-group\" >\r\n                        <h1>Musisz być zalogowanym aby korzystać z tej funkcji.</h1>\r\n                        <Link to='/sign-up'><button type=\"submit\" className=\"submit-btn\"> Zaloguj </button></Link>\r\n                    </div>\r\n                </div>   \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default UserPanel;","import React from 'react';\r\nconst AirConditionItem = props => \r\n{\r\n    const\r\n    {\r\n        city,\r\n        country,\r\n        date,\r\n        time,\r\n        aqi,\r\n        co,\r\n        nh3,\r\n        no,\r\n        no2,\r\n        o3,\r\n        pm2_5,\r\n        pm10,\r\n        so2,\r\n        color,  \r\n        error\r\n\r\n    } = props.air;\r\n\r\n    let content = null;\r\n        \r\n    if(!error && city)\r\n    {\r\n        content = (\r\n            <div className=\"airCard\">\r\n                <div className=\"card\" >\r\n                    <div className=\"face face1\" style={\r\n                                                { \r\n                                                    background: conditionColors[color]\r\n                                                }\r\n                    }>\r\n                        <div className=\"content\" >\r\n                            <p> {city} </p>\r\n                            <p> {country} </p>\r\n                            <p> {date} </p>\r\n                            <p> {time} </p>\r\n                            <p> {aqi} </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"face face2\">\r\n                        <div className=\"content\">\r\n                            <p>CO: {co} ({Math.floor((co/7000)*100)}%)</p>\r\n                            <p>NH3: {nh3} ({Math.floor((nh3/1750)*100)}%)</p>\r\n                            <p>NO: {no} ({Math.floor((no/200)*100)}%)</p>\r\n                            <p>NO2: {no2} ({Math.floor((no2/100)*100)}%)</p>\r\n                            <p>O3: {o3} ({Math.floor((o3/120)*100)}%)</p>\r\n                            <p>PM2.5: {pm2_5} ({Math.floor((pm2_5/35)*100)}%)</p>\r\n                            <p>PM10: {pm10} ({Math.floor((pm10/50)*100)}%)</p>\r\n                            <p>SO2:{so2} ({Math.floor((so2/100)*100)}%)</p>  \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    if(error && !city)\r\n    {\r\n        content = (\r\n            \r\n            {error} \r\n            \r\n        );\r\n    }\r\n    return(\r\n        <div className=\"city-form\">\r\n        {error ? <h1>Brak danych dla podanego maista - {city} nie istnieje, zostało błędnie wpisane lub usługa jest obecnie niedostępna -error API!</h1> : content}\r\n    </div>\r\n    );\r\n};\r\nconst conditionColors = \r\n{\r\n    1:'green',\r\n    2:'lightgreen',\r\n    3:'yellow',\r\n    4:'red',\r\n    5:'purple',\r\n};\r\nexport default AirConditionItem;","import React from 'react'\r\nimport Form from '../Form/Form'\r\nimport CalDate from '../Functions/CalDate';\r\nimport CalTime from '../Functions/CalTime';\r\nimport AirConditionItem from './AirConditionItem';\r\nimport './AirCondition.css';\r\n\r\nconst API_key=\"157d33f8987d245bc6a1997408e90015\";\r\n\r\nclass AirCondition extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state=\r\n        {\r\n        value:\"\",\r\n        city:\"Miasto\",\r\n        country:\"\",\r\n        aqi:undefined,\r\n        co:undefined,\r\n        nh3:undefined,\r\n        no:undefined,\r\n        no2:undefined,\r\n        o3:undefined,\r\n        pm2_5:undefined,\r\n        pm10:undefined,\r\n        so2:undefined,\r\n        error:false\r\n        };\r\n    };\r\n    \r\n    getAir = (e) =>\r\n    {\r\n        e.preventDefault()\r\n          \r\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&APPID=${API_key}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            this.getAirQuality(response.coord.lat,response.coord.lon);\r\n            this.setState(state =>(\r\n            {\r\n                city:state.value,\r\n                country:response.sys.country,\r\n                date:CalDate(response.dt,response.timezone),\r\n                time:CalTime(response.dt,response.timezone), \r\n                error:false\r\n            }));\r\n\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err);\r\n\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n    getAirQuality(lat,lon)\r\n    {\r\n        var result = null;\r\n        result = fetch(`http://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${lon}&appid=${API_key}`)\r\n        .then(responseAirQuality => \r\n        {\r\n            if(responseAirQuality.ok)\r\n            {\r\n                return responseAirQuality;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(responseAirQuality => responseAirQuality.json())\r\n        .then(responseAirQuality => \r\n        {\r\n              \r\n            console.log(responseAirQuality);\r\n            this.setState(state =>(\r\n            {\r\n                co:responseAirQuality.list[0].components.co,\r\n                nh3:responseAirQuality.list[0].components.nh3,\r\n                no:responseAirQuality.list[0].components.no,\r\n                no2:responseAirQuality.list[0].components.no2,\r\n                o3:responseAirQuality.list[0].components.o3,\r\n                pm2_5:responseAirQuality.list[0].components.pm2_5,\r\n                pm10:responseAirQuality.list[0].components.pm10,\r\n                so2:responseAirQuality.list[0].components.so2,\r\n                color:responseAirQuality.list[0].main.aqi,\r\n                error:false\r\n            }))\r\n              return fetch(`http://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${lon}&appid=${API_key}`);\r\n        })\r\n        .then(responseAirQuality => responseAirQuality.json())         \r\n        .catch(err =>\r\n        {\r\n            console.log(err);\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                    error:true,\r\n                    city:prevState.city\r\n                }\r\n            });\r\n        });\r\n        \r\n        result.then(r =>\r\n        {\r\n            fetch(`https://weather-mysql-deploy.herokuapp.com/api/air`)\r\n            .then(responseAir => \r\n            {\r\n                if(responseAir.ok)\r\n                {\r\n                    return responseAir;\r\n                \r\n                }\r\n                    throw Error(\"Błąd pobierania danych z API\");\r\n            })\r\n            .then(responseAir => responseAir.json())\r\n            .then(responseAir => \r\n            {\r\n                console.log(responseAir);\r\n\r\n                console.log(r);\r\n            \r\n                this.setState(state =>(\r\n                {\r\n                    aqi:responseAir[r.list[0].main.aqi-1].condition,\r\n                    error:false\r\n                }));\r\n            });\r\n        });\r\n    };\r\n\r\n    inputHandler=(e)=>\r\n    {\r\n        this.setState(\r\n        {\r\n            value:e.target.value\r\n        });\r\n    };\r\n\r\n    submitHandler=(e)=>\r\n    {\r\n        this.getAir(e);\r\n    };\r\n    render(){\r\n        return(\r\n            <div className=\"main\"   style={\r\n                                    { \r\n                                        backgroundImage: `url(\"/images/bg_air.jpg\")` \r\n                                    }\r\n            }>\r\n                <div className=\"city-form\">\r\n                    <h1>Wyszukaj miasto dla którego chcesz sprawdzić obecny stan powietrza</h1>\r\n                    <Form \r\n                        value={this.state.value}  \r\n                        handler={this.inputHandler}\r\n                        submit={this.submitHandler}\r\n                    /> \r\n                </div> \r\n                <div>\r\n                    {this.state.city ?(\r\n                        <AirConditionItem air={this.state}/>   \r\n                    ):null}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\nexport default AirCondition;","import React from 'react'\r\n\r\nconst CompareCurrentWeatherItem=({element, compare })=>\r\n{\r\n    const\r\n    {\r\n        date,\r\n        image,\r\n        weather,\r\n        temp,\r\n        pressure,\r\n        wind,\r\n        source\r\n    } = element;\r\n    const\r\n    {\r\n        weatherComp,\r\n        tempComp,\r\n        pressureComp,\r\n        windComp\r\n    } = compare;\r\n\r\n    return ( \r\n        <div className=\"compareCard\">\r\n            <div className=\"card\" >\r\n                <div className=\"face face1\">\r\n                    <div className=\"content\">\r\n                        <h3>{source}</h3>\r\n                        <p>{date}</p>\r\n                        <p><img src={image} width=\"100\" height=\"100\" alt=\"img\"/></p>\r\n                        <h3>{weather} </h3>\r\n                        <h3>({weatherComp})</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"face face2\">\r\n                    <div className=\"content\">\r\n                        <p>Temperatura: {temp}&deg; ({tempComp}&deg;)</p>\r\n                        <p>Ciśnienie: {pressure} hPa ({pressureComp}hPa)</p> \r\n                        <p>Wiatr: {wind} km/h ({windComp} km/h)</p>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CompareCurrentWeatherItem;","import React from 'react';\r\n\r\nconst CompareForecastItem=({element})=>\r\n{\r\n    const\r\n    {\r\n        image,\r\n        weather,\r\n        date,\r\n        tempMax,\r\n        tempMin,\r\n        pressure,\r\n        wind,\r\n        clouds,\r\n        humidity,\r\n        sunrise,\r\n        sunset\r\n    } = element;\r\n    return ( \r\n        <div className=\"compare-forecast-card\">\r\n            <div className=\"card\" >\r\n                <div className=\"face face1\">\r\n                    <div className=\"content\">\r\n                        <p>{date}</p>\r\n                        <p><img src={image} width=\"90\" height=\"90\" alt=\"img\"/></p>\r\n                        <h3>{weather}</h3>\r\n                        <p><img src={weatherIcons[5]} width=\"20\" height=\"20\" alt=\"img\"/>max:{tempMax}&deg; <img src={weatherIcons[5]} width=\"20\" height=\"20\" alt=\"img\"/>min:{tempMin}&deg;</p> \r\n                    </div>\r\n                </div>\r\n                <div className=\"face face2\">\r\n                    <div className=\"content\">\r\n                        <p><img src={weatherIcons[1]} width=\"20\" height=\"20\" alt=\"img\"/>{clouds}% <img src={weatherIcons[4]} width=\"20\" height=\"20\" alt=\"img\"/>{humidity}%</p>\r\n                        <p></p>\r\n                        <p><img src={weatherIcons[2]} width=\"20\" height=\"20\" alt=\"img\"/>{sunrise} <img src={weatherIcons[3]} width=\"20\" height=\"20\" alt=\"img\"/>{sunset}</p>  \r\n                        <p><img src={weatherIcons[6]} width=\"20\" height=\"20\" alt=\"img\"/>{pressure} hPa</p>  \r\n                        <p><img src={weatherIcons[7]} width=\"20\" height=\"20\" alt=\"img\"/>{wind}km/h</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst weatherIcons = \r\n{\r\n    1:'/images/clouds.png',\r\n    2:'/images/sunrise.png',\r\n    3:'/images/sunset.png',\r\n    4:'/images/humidity.png',\r\n    5:'/images/temp.webp',\r\n    6:'/images/pressure.png',\r\n    7:'/images/wind.png',\r\n};\r\n\r\nexport default CompareForecastItem;","import React from 'react'\r\nimport Form from '../Form/Form'\r\nimport CalDate from '../Functions/CalDate';\r\nimport CalCelsius from '../Functions/CalCelsius';\r\nimport CalWindSpeed from '../Functions/CalWindSpeed';\r\nimport CompareCurrentWeatherItem from './CompareCurrentWeatherItem';\r\nimport CompareForecastItem from './CompareForecastItem';\r\n\r\nimport './Compare.css';\r\n\r\nconst API_key_OWM=\"157d33f8987d245bc6a1997408e90015\";\r\nconst API_key_WA = \"d42d0d989ead4316b9d143558213105\";\r\nconst API_key_w = \"4c7c27f8abf34ae09c61bad9a897be7e\";\r\n\r\nclass Compare extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state=\r\n        {\r\n            value:\"\",\r\n            compareCurrentElements:[\r\n            ],\r\n            ForecastDailyElements:[\r\n            ],\r\n            ForecastDailyElements:[\r\n            ],\r\n            source:\"OpenWeatherMap\",\r\n            city:undefined,\r\n            lat:undefined,\r\n            lon:undefined,\r\n            currentProperty:undefined,\r\n            Property:undefined,\r\n            Property:undefined,\r\n            weatherComp:undefined,\r\n            tempComp:undefined,\r\n            pressureComp:undefined,\r\n            windComp:undefined,\r\n            content:undefined,\r\n            error:false,\r\n            errorOWM:false,\r\n            errorCity:false\r\n        };\r\n    };\r\n\r\n    nextProperty = (Property,Elements) => \r\n    {\r\n        const newIndex = Property.id +1;\r\n\r\n        this.setState(\r\n        {\r\n            Property: Elements[newIndex]\r\n        });\r\n\r\n        console.log(newIndex);\r\n    };\r\n\r\n    prevProperty= (Property,Elements) => \r\n    {\r\n        const newIndex = Property.id -1;\r\n\r\n        this.setState(\r\n        {\r\n            Property: Elements[newIndex]\r\n        });\r\n    };\r\n    setSource = (source) => \r\n    {\r\n        this.setState(\r\n        {\r\n                source:source\r\n        });\r\n\r\n        if(source===\"OpenWeatherMap\")\r\n        {\r\n            this.getForecastDailyOWM(this.state.lat,this.state.lon);\r\n        }\r\n\r\n        if(source===\"WeatherApi\")\r\n        {\r\n            this.getForecastDailyWA(this.state.city);\r\n        }\r\n\r\n        if(source===\"TommorowIO\")\r\n        {\r\n            this.getForecastDailyTI(this.state.lat,this.state.lon);\r\n        }\r\n\r\n        if(source===\"VisualCrossing\")\r\n        {\r\n            this.getForecastDailyVC(this.state.city);\r\n        }\r\n\r\n        if(source===\"Weatherbit\")\r\n        {\r\n            this.getForecastDailyWB(this.state.city);\r\n        }\r\n    };\r\n\r\n    getDefaultCompare = (city) =>\r\n    {\r\n        console.log(city)\r\n        \r\n        this.setState(\r\n        {\r\n            compareCurrentElements:[]\r\n        });\r\n        \r\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&lang=pl&APPID=${API_key_OWM}`)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.getForecastDailyOWM(response.coord.lat,response.coord.lon)\r\n            this.getWeatherWeatherApi(city)\r\n            this.getWeatherTommorowIo(response.coord.lat,response.coord.lon)\r\n            this.getWeatherVisualcrossing(city)\r\n            this.getWeatherWeatherbit(city)\r\n            this.setState({\r\n                timezone:response.timezone,\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':1,\r\n                    'date':CalDate(response.dt,response.timezone),\r\n                    'weather':response.weather[0].description,\r\n                    'temp':CalCelsius(response.main.temp),\r\n                    'pressure':response.main.pressure,\r\n                    'wind':CalWindSpeed(response.wind.speed),\r\n                    'image':weatherIcons[response.weather[0].id],\r\n                    'source':\"OpenWeatherMap\"\r\n                }],\r\n                city:response.name,\r\n                lat:response.coord.lat,\r\n                lon:response.coord.lon,\r\n                weatherComp:response.weather[0].description,\r\n                tempComp:CalCelsius(response.main.temp),\r\n                pressureComp:response.main.pressure,\r\n                windComp:CalWindSpeed(response.wind.speed),\r\n            });\r\n            this.setState(\r\n            {\r\n                currentProperty:this.state.compareCurrentElements[0]\r\n            }); \r\n\r\n            return fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&lang=pl&APPID=${API_key_OWM}`);\r\n        })\r\n        .then(responseAirQuality => responseAirQuality.json()) \r\n        .catch(err =>{\r\n            console.log(err);\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                errorOWM:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n    getWeatherCompare = (e) =>\r\n    {\r\n        e.preventDefault()\r\n        \r\n        this.setState(\r\n        {\r\n            compareCurrentElements:[]\r\n        });\r\n        \r\n        const result = fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key_OWM}`)\r\n        .then(response => {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }else{\r\n                this.setState(state =>(\r\n                    {\r\n                    city:state.value,\r\n                    }))\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.getForecastDailyOWM(response.coord.lat,response.coord.lon)\r\n            this.getWeatherWeatherApi(this.state.value)\r\n            this.getWeatherTommorowIo(response.coord.lat,response.coord.lon)\r\n            this.getWeatherVisualcrossing(this.state.value)\r\n            this.getWeatherWeatherbit(this.state.value)\r\n            this.setState({\r\n                timezone:response.timezone,\r\n                errorCity:false,\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':1,\r\n                    'date':CalDate(response.dt),\r\n                    'weather':response.weather[0].description,\r\n                    'temp':CalCelsius(response.main.temp),\r\n                    'pressure':response.main.pressure,\r\n                    'wind':CalWindSpeed(response.wind.speed),\r\n                    'image':weatherIcons[response.weather[0].id],\r\n                    'source':\"OpenWeatherMap\"\r\n                }],\r\n                city:response.name,\r\n                lat:response.coord.lat,\r\n                lon:response.coord.lon,\r\n                weatherComp:response.weather[0].description,\r\n                tempComp:CalCelsius(response.main.temp),\r\n                pressureComp:response.main.pressure,\r\n                windComp:CalWindSpeed(response.wind.speed),\r\n            });\r\n            this.setState(\r\n            {\r\n                currentProperty:this.state.compareCurrentElements[0]\r\n            }); \r\n\r\n            return fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key_OWM}`);\r\n        })\r\n        .then(responseAirQuality => responseAirQuality.json()) \r\n        .catch(err =>{\r\n            console.log(err);\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                errorCity:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getForecastDailyOWM = (lat,lon)=>\r\n    {\r\n        console.log(lat);\r\n\r\n        this.setState({\r\n            ForecastDailyElements:[]\r\n        });\r\n        \r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key_OWM}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n              throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            for (var i = 0; i < 8; i++) \r\n            {\r\n                this.setState(\r\n                {\r\n                    ForecastDailyElements:[...this.state.ForecastDailyElements,\r\n                    {\r\n                        'id':i,\r\n                        'date':CalDate(response.daily[i].dt,this.state.timezone),\r\n                        'weather':response.daily[i].weather[0].description,\r\n                        'tempMax':CalCelsius(response.daily[i].temp.max),\r\n                        'tempMin':CalCelsius(response.daily[i].temp.min),\r\n                        'pressure':response.daily[i].pressure,\r\n                        'wind':CalWindSpeed(response.daily[i].wind_speed),\r\n                        'image':weatherIcons[response.daily[i].weather[0].id],\r\n                        'clouds':response.daily[i].clouds,\r\n                        'humidity':response.daily[i].humidity,\r\n                    }],  \r\n                });\r\n            };  \r\n            this.setState(\r\n            {\r\n                Property:this.state.ForecastDailyElements[1]\r\n            });\r\n        });\r\n    };\r\n    getWeatherWeatherApi = (city) =>\r\n    {\r\n            \r\n        fetch(`http://api.weatherapi.com/v1/current.json?key=${API_key_WA}&q=${city}&days=7&aqi=yes&alerts=yes&lang=pl`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response =>\r\n        {\r\n            console.log(response);\r\n            this.setState(\r\n            {\r\n                compareCurrentElements:[...this.state.compareCurrentElements,\r\n                {\r\n                    'id':2,\r\n                    'date':response.current.last_updated,\r\n                    'weather':response.current.condition.text,\r\n                    'temp':response.current.temp_c,\r\n                    'pressure':response.current.pressure_mb,\r\n                    'wind':response.current.wind_kph,\r\n                    'image':weatherIcons[response.current.condition.code],\r\n                    'source':\"WeatherApi\"\r\n                }],\r\n            });\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err);\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getForecastDailyWA = (city) =>\r\n    {\r\n        this.setState(\r\n        {\r\n            ForecastDailyElements:[]\r\n        });\r\n            \r\n        fetch(`http://api.weatherapi.com/v1/forecast.json?key=${API_key_WA}&q=${city}&days=4&aqi=yes&alerts=yes&lang=pl`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            for (var i = 0; i < 3; i++) \r\n            {\r\n                this.setState(\r\n                {\r\n                    ForecastDailyElements:[...this.state.ForecastDailyElements,\r\n                    {\r\n                        'id':i,\r\n                        'date':response.forecast.forecastday[i].date,\r\n                        'weather':response.forecast.forecastday[i].day.condition.text,\r\n                        'tempMax':response.forecast.forecastday[i].day.maxtemp_c,\r\n                        'tempMin':response.forecast.forecastday[i].day.mintemp_c,\r\n                        'pressure':\"-\",\r\n                        'wind':\"-\",\r\n                        'image':weatherIcons[response.forecast.forecastday[i].day.condition.code],\r\n                        'clouds':\"-\",\r\n                        'humidity':response.forecast.forecastday[i].day.avghumidity,\r\n                    }],\r\n                });\r\n            }\r\n            this.setState(\r\n            {\r\n                Property:this.state.ForecastDailyElements[1]\r\n            }) \r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err)\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getWeatherTommorowIo = (lat,lon) =>\r\n    {\r\n        \r\n        this.setState(\r\n        {\r\n            ForecastDailyElements:[]\r\n        });\r\n            \r\n        fetch(`https://api.tomorrow.io/v4/timelines?location=${lat},${lon}&fields=temperature,humidity,windSpeed,cloudCover,weatherCode,pressureSurfaceLevel&timesteps=1d&units=metric&apikey=Xsa59kYGGrHiXs1TZ3cItU7zRZ4FfGQ8`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }else{\r\n\r\n                this.setState(\r\n                    {\r\n                        compareCurrentElements:[...this.state.compareCurrentElements,\r\n                        {\r\n                            'id':3,\r\n                            'source':\"API TommorowIo jest aktualnie niedostępne\"\r\n                        }],\r\n                    });\r\n                throw Error(\"Błąd pobierania danych z API\");\r\n            }\r\n            \r\n\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            this.setState(\r\n            {\r\n                compareCurrentElements:[...this.state.compareCurrentElements,\r\n                {\r\n                    'id':3,\r\n                    'date':response.data.timelines[0].startTime,\r\n                    'weather':weatherConditions[response.data.timelines[0].intervals[0].values.weatherCode],\r\n                    'temp':response.data.timelines[0].intervals[0].values.temperature,\r\n                    'pressure':response.data.timelines[0].intervals[0].values.pressureSurfaceLevel,\r\n                    'wind':CalWindSpeed(response.data.timelines[0].intervals[0].values.windSpeed),\r\n                    'image':weatherIcons[response.data.timelines[0].intervals[0].values.weatherCode],\r\n                    'source':\"TommorowIo\"\r\n                }],\r\n            });\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err)\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getForecastDailyTI = (lat,lon) =>\r\n    {\r\n        this.setState(\r\n        {\r\n            ForecastDailyElements:[]\r\n        });\r\n            \r\n        fetch(`https://api.tomorrow.io/v4/timelines?location=${lat},${lon}&fields=temperature,humidity,windSpeed,cloudCover,weatherCode,pressureSurfaceLevel&timesteps=1d&units=metric&apikey=Xsa59kYGGrHiXs1TZ3cItU7zRZ4FfGQ8`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            for (var i = 0; i < 8; i++) \r\n            {\r\n                this.setState(\r\n                    {\r\n                    ForecastDailyElements:[...this.state.ForecastDailyElements,\r\n                    {\r\n                        'id':i,\r\n                        'date':response.data.timelines[0].intervals[i].startTime,\r\n                        'weather':weatherConditions[response.data.timelines[0].intervals[i].values.weatherCode],\r\n                        'tempMax':response.data.timelines[0].intervals[i].values.temperature,\r\n                        'tempMin':response.data.timelines[0].intervals[i].values.temperature,\r\n                        'pressure':response.data.timelines[0].intervals[i].values.pressureSurfaceLevel,\r\n                        'wind':response.data.timelines[0].intervals[i].values.windSpeed,\r\n                        'image':weatherIcons[response.data.timelines[0].intervals[i].values.weatherCode],\r\n                        'clouds':response.data.timelines[0].intervals[i].values.cloudCover,\r\n                        'humidity':response.data.timelines[0].intervals[i].values.humidity,\r\n                    }],  \r\n                });\r\n            }  \r\n            this.setState(\r\n            {\r\n                Property:this.state.ForecastDailyElements[1]\r\n            }); \r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err);\r\n            this.setState(prevState =>{\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getWeatherVisualcrossing = (city) =>\r\n    {\r\n\r\n        this.setState(\r\n            {\r\n            ForecastDailyElements:[]\r\n        });\r\n            \r\n        fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/forecast?aggregateHours=24&combinationMethod=aggregate&contentType=json&unitGroup=metric&locationMode=single&iconSet=icons2&key=LHKNDUGQ4MSQTL5749JVGX4XV&dataElements=default&locations=${city}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            this.setState(\r\n            {\r\n                compareCurrentElements:[...this.state.compareCurrentElements,\r\n                {\r\n                    'id':4,\r\n                    'date':response.location.currentConditions.datetime,\r\n                    'weather':response.location.currentConditions.icon,\r\n                    'temp':response.location.currentConditions.temp,\r\n                    'pressure':response.location.currentConditions.sealevelpressure,\r\n                    'wind':response.location.currentConditions.wspd,\r\n                    'image':weatherIcons[0],\r\n                    'source':\"VisualCrossing\"\r\n                }],\r\n            });\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err)\r\n            this.setState(prevState =>{\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getForecastDailyVC = (city) =>\r\n    {\r\n        this.setState(\r\n        {\r\n            ForecastDailyElements:[]\r\n        });\r\n            \r\n        fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/forecast?aggregateHours=24&combinationMethod=aggregate&contentType=json&unitGroup=metric&locationMode=single&iconSet=icons2&key=LHKNDUGQ4MSQTL5749JVGX4XV&dataElements=default&locations=${city}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            for (var i = 0; i < 8; i++) \r\n            {\r\n                this.setState(\r\n                {\r\n                    ForecastDailyElements:[...this.state.ForecastDailyElements,\r\n                    {\r\n                        'id':i,\r\n                        'date':response.location.values[i].datetime,\r\n                        'weather':response.location.values[i].conditions,\r\n                        'tempMax':response.location.values[i].maxt,\r\n                        'tempMin':response.location.values[i].mint,\r\n                        'pressure':\"-\",\r\n                        'wind':1.6*response.location.values[i].wspd,\r\n                        'image':\"-\",\r\n                        'clouds':response.location.values[i].cloudcover,\r\n                        'humidity':response.location.values[i].humidity,\r\n                    }],  \r\n                });\r\n            }  \r\n            this.setState(\r\n            {\r\n                Property:this.state.ForecastDailyElements[1]\r\n            });\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err)\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            })\r\n        });\r\n    };\r\n\r\n    getWeatherWeatherbit = (city) =>\r\n    {\r\n        this.setState(\r\n        {\r\n            ForecastDailyElements:[]\r\n        });\r\n            \r\n        fetch(` https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&lang=pl&key=${API_key_w}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            this.setState(\r\n            {\r\n                compareCurrentElements:[...this.state.compareCurrentElements,\r\n                {\r\n                    'id':5,\r\n                    'date':response.data[0].ob_time,\r\n                    'weather':response.data[0].weather.description,\r\n                    'temp':response.data[0].temp,\r\n                    'pressure':Math.floor(response.data[0].pres),\r\n                    'wind':Math.floor(1.609*response.data[0].wind_spd),\r\n                    'image':weatherIcons[response.data[0].weather.code],\r\n                    'source':\"Weatherbit\"\r\n                }],\r\n            });\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err);\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getForecastDailyWB = (city) =>\r\n    {\r\n\r\n        this.setState({\r\n            ForecastDailyElements:[]\r\n        });\r\n            \r\n        fetch(` https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&lang=pl&key=${API_key_w}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            for (var i = 0; i < 8; i++) \r\n            {\r\n                this.setState(\r\n                {\r\n                    ForecastDailyElements:[...this.state.ForecastDailyElements,\r\n                    {\r\n                        'id':i,\r\n                        'date':response.data[i].datetime,\r\n                        'weather':response.data[i].weather.description,\r\n                        'tempMax':response.data[i].max_temp,\r\n                        'tempMin':response.data[i].min_temp,\r\n                        'pressure':response.data[i].pres,\r\n                        'wind':Math.floor(1.609*response.data[i].wind_spd),\r\n                        'image':weatherIcons[response.data[i].weather.code],\r\n                        'clouds':response.data[i].clouds,\r\n                        'humidity':\"-\",\r\n                    }],  \r\n                });\r\n            }  \r\n            this.setState(\r\n            {\r\n                Property:this.state.ForecastDailyElements[1]\r\n            }); \r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err);\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    inputHandler=(e)=>\r\n    {\r\n        this.setState(\r\n        {\r\n            value:e.target.value\r\n        });\r\n    };\r\n    componentDidMount()\r\n    {\r\n        this.getDefaultCompare(\"Warszawa\");\r\n    }\r\n    render(){\r\n        \r\n        if(this.state.errorOWM)\r\n        {\r\n            this.state.content = (\r\n                <h1>USŁUGA JEST AKTUALNIE NIEDOSTĘPNA - ERROR API</h1>\r\n            )\r\n        }if(this.state.errorCity){\r\n            this.state.content = (\r\n                <h1>Brak danych dla podanego maista - {this.state.city} nie istnieje lub zostało błędnie wpisane!</h1>\r\n            )\r\n        }if(!this.state.errorOWM&&!this.state.errorCity){\r\n\r\n            this.state.content = (\r\n                <><div className=\"compare-main-cards\">\r\n                    {this.state.currentProperty ? (\r\n                        <div className=\"compare-main-cards-slider\">\r\n                            <div className=\"compare-main-cards-slider-wrapper\" style={{\r\n                                'transform': `translateX(-${this.state.currentProperty.id * (100 / this.state.compareCurrentElements.length)}%)`\r\n                            }}>\r\n                                {this.state.compareCurrentElements.map(fde => <CompareCurrentWeatherItem compare={this.state} key={fde.id} element={fde} />)}\r\n                            </div>\r\n\r\n                        </div>\r\n                    ) : null}\r\n                </div><div className=\"compare-forecast-main\">\r\n                        <button\r\n                            onClick={() => this.setSource(\"OpenWeatherMap\")}\r\n                        >\r\n                            OpenWeatherMap\r\n                        </button>\r\n                        <button\r\n                            onClick={() => this.setSource(\"WeatherApi\")}\r\n                        >\r\n                            WeatherApi\r\n                        </button>\r\n                        <button\r\n                            onClick={() => this.setSource(\"TommorowIO\")}\r\n                        >\r\n                            TommorowIO\r\n                        </button>\r\n                        <button\r\n                            onClick={() => this.setSource(\"VisualCrossing\")}\r\n                        >\r\n                            VisualCrossing\r\n                        </button>\r\n                        <button\r\n                            onClick={() => this.setSource(\"Weatherbit\")}\r\n                        >\r\n                            Weatherbit\r\n                        </button>\r\n                        {this.state.Property ? (\r\n                            <div className=\"compare-forecast-cards\">\r\n                                <button className=\"left\" style={{\r\n                                    backgroundImage: `url(\"/images/arrow_left.png\")`\r\n                                }}\r\n                                    onClick={() => this.prevProperty(this.state.Property, this.state.ForecastDailyElements)}\r\n                                    disabled={this.state.Property.id === 0}\r\n                                >\r\n                                </button>\r\n                                <button className=\"right\" style={{\r\n                                    backgroundImage: `url(\"/images/arrow_right.png\")`\r\n                                }}\r\n                                    onClick={() => this.nextProperty(this.state.Property, this.state.ForecastDailyElements)}\r\n                                    disabled={this.state.Property.id === this.state.ForecastDailyElements.length - 3}\r\n                                >\r\n                                </button>\r\n                                <div className=\"compare-forecast-cards\">\r\n                                    <div className=\"compare-forecast-cards-slider\">\r\n                                        <div className=\"compare-forecast-cards-slider-wrapper\" style={{\r\n                                            'transform': `translateX(-${this.state.Property.id * (100 / this.state.ForecastDailyElements.length)}%)`\r\n                                        }}>\r\n                                            {this.state.ForecastDailyElements.map(fde => <CompareForecastItem key={fde.id} element={fde} />)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div></>\r\n            )\r\n        }\r\n            return( \r\n                <div    style={\r\n                        { \r\n                            backgroundImage: `url(\"/images/bg_comp.jpg\")` \r\n                        }\r\n                }>\r\n                    <div className=\"city-form\">\r\n                    <h1>Wyszukaj miasto dla którego chcesz porównać obecne warunki pogodowe oraz prognozy pogody</h1>\r\n                        <Form \r\n                            value={this.state.value}  \r\n                            handler={this.inputHandler}\r\n                            submit={this.getWeatherCompare}\r\n                        /> \r\n                    </div>\r\n                    {this.state.content}\r\n                </div>\r\n            )\r\n    }\r\n};\r\n\r\nconst weatherIcons = \r\n{\r\n    200:'/images/200.png',\r\n    201:'/images/201.png',\r\n    202:'/images/202.png',\r\n    210:'/images/210.png',\r\n    211:'/images/211.png',\r\n    212:'/images/212.png',\r\n    221:'/images/212.png',\r\n    230:'/images/230D.png',\r\n    231:'/images/231.png',\r\n    232:'/images/232.png',\r\n    300:'/images/300D.png',\r\n    301:'/images/301.png',\r\n    302:'/images/302.png',\r\n    310:'/images/310D.png',\r\n    311:'/images/311.png',\r\n    312:'/images/312.png',\r\n    313:'/images/313_1.png',\r\n    314:'/images/314.png',\r\n    321:'/images/321.png',\r\n    500:'/images/500D.png',\r\n    501:'/images/501.png',\r\n    502:'/images/502.png',\r\n    503:'/images/503.png',\r\n    504:'/images/504.png',\r\n    511:'/images/511.png',\r\n    520:'/images/520D.png',\r\n    521:'/images/521_2.png',\r\n    522:'/images/522_1.png',\r\n    531:'/images/522_1.png',\r\n    600:'/images/600D.png',\r\n    601:'/images/601.png',\r\n    602:'/images/602.png',\r\n    611:'/images/611.png',\r\n    612:'/images/612D.png',\r\n    613:'/images/613.png',\r\n    615:'/images/615D.png',\r\n    616:'/images/616.png',\r\n    620:'/images/620D.png',\r\n    621:'/images/621.png',\r\n    622:'/images/622.png',\r\n    701:'/images/701_2.png',\r\n    711:'/images/701_2.png',\r\n    721:'/images/701_2.png',\r\n    731:'/images/701_2.png',\r\n    741:'/images/701_2.png',\r\n    751:'/images/701_2.png',\r\n    761:'/images/701_2.png',\r\n    762:'/images/701_2.png',\r\n    771:'/images/701_2.png',\r\n    781:'/images/701_2.png',\r\n    800:'/images/800D.png',\r\n    801:'/images/801D.png',\r\n    802:'/images/802D.png',\r\n    803:'/images/803D.png',\r\n    804:'/images/804.png',\r\n    1000:'/images/800D.png',\r\n    1003:'/images/801D.png',\r\n    1006:'/images/802D.png',\r\n    1009:'/images/804.png',\r\n    1030:'/images/701_2.png',\r\n    1063:'/images/500D.png',\r\n    1066:'/images/600.png',\r\n    1069:'/images/613.png',\r\n    1072:'/images/511.png',\r\n    1087:'/images/200.png',\r\n    1114:'/images/602.png',\r\n    1117:'/images/622.png',\r\n    1135:'/images/702_1.png',\r\n    1147:'/images/702_1.png',\r\n    1150:'/images/300D.png',\r\n    1153:'/images/301.png',\r\n    1168:'/images/511.png',\r\n    1171:'/images/501.png',\r\n    1180:'/images/502.png',\r\n    1183:'/images/500D.png',\r\n    1186:'/images/500D.png',\r\n    1189:'/images/501.png',\r\n    1192:'/images/502.png',\r\n    1195:'/images/503.png',\r\n    1198:'/images/511.png',\r\n    1201:'/images/511.png',\r\n    1204:'/images/611.png',\r\n    1207:'/images/612D.png',\r\n    1210:'/images/600D.png',\r\n    1213:'/images/600D.png',\r\n    1216:'/images/601.png',\r\n    1219:'/images/601.png',\r\n    1222:'/images/602.png',\r\n    1225:'/images/602.png',\r\n    1237:'/images/511.png',\r\n    1240:'/images/520.png',\r\n    1243:'/images/521_2.png',\r\n    1246:'/images/522_1.png',\r\n    1249:'/images/612D.png',\r\n    1252:'/images/613.png',\r\n    1255:'/images/612D.png',\r\n    1258:'/images/613.png',\r\n    1261:'/images/511.png',\r\n    1264:'/images/511.png',\r\n    1273:'/images/200.png',\r\n    1276:'/images/201.png',\r\n    1279:'/images/602.png',\r\n    1282:'/images/602.png',\r\n    4201:'/images/502.png',\r\n    4001:'/images/501.png',\r\n    4200:'/images/500D.png',\r\n    6201:'/images/511.png',\r\n    6001:'/images/511.png',\r\n    6200:'/images/511.png',\r\n    6000:'/images/511.png',\r\n    4000:'/images/301.png',\r\n    7101:'/images/511.png',\r\n    7000:'/images/511.png',\r\n    7102:'/images/511.png',\r\n    5101:'/images/602.png',\r\n    5000:'/images/601.png',\r\n    5100:'/images/600D.png',\r\n    5001:'/images/601.png',\r\n    8000:'/images/201.png',\r\n    2100:'/images/701_2.png',\r\n    2000:'/images/701_2.png',\r\n    1001:'/images/804.png',\r\n    1102:'/images/803D.png',\r\n    1101:'/images/802D.png',\r\n    1100:'/images/801D.png',\r\n}\r\n\r\nconst weatherConditions = \r\n{\r\n    4201:'Duży deszcz',\r\n    4001:'Deszcz',\r\n    4200:'Lekki Deszcz',\r\n    6201:'Duży Marznący Deszcz',\r\n    6001:'Marznący Deszcz',\r\n    6200:'Lekki Marznący Deszcz',\r\n    6000:'Marznąca Mrzawka',\r\n    4000:'Mrzawka',\r\n    7101:'Duże Krupy',\r\n    7000:'Krupy',\r\n    7102:'Lekkie Krupy',\r\n    5101:'Duży Śnieg',\r\n    5000:'Śnieg',\r\n    5100:'Lekki Śnieg',\r\n    5001:'Zamieć',\r\n    8000:'Burza',\r\n    2100:'Lekka Mgła',\r\n    2000:'Mgła',\r\n    1001:'Pochmurnie',\r\n    1102:'Przewaga Chmur',\r\n    1101:'Częściowe Zachmurzenie',\r\n    1100:'Przeważnie Słonecznie',\r\n    1000:'Słonecznie',\r\n}\r\n\r\nexport default Compare;","import React,{useEffect, useState} from 'react';\r\nimport Axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './SignUp.css';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nfunction SignUp()\r\n{\r\n\r\n    const [usernameReg, setUsernameReg] = useState('');\r\n    const [passwordReg, setPasswordReg] = useState('');\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n\r\n    const [x, setX] = useState('');\r\n    const [y, setY] = useState('');\r\n    const [z, setZ] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    Axios.defaults.withCredentials = true;\r\n\r\n    const { register, handleSubmit, formState: { errors }} = useForm();\r\n    const onSubmit = (values) => {\r\n        console.log(values)\r\n        Axios.post('https://weather-mysql-deploy.herokuapp.com/api/register',\r\n        {\r\n            username:values.user,\r\n            password:values.password\r\n        }).then((response) =>\r\n        {\r\n            console.log(response);\r\n            if(!response.data.err){\r\n                \r\n                alert(`Dodano użytkownika ${values.user}`)\r\n                //window.location.reload(false);\r\n                loginBtn()\r\n            }else{\r\n\r\n                alert(`Nie dodano użytkownika ${values.user} ponieważ taki już istnieje!`)\r\n            }\r\n        })\r\n    }\r\n\r\n    const registerUser = () => \r\n    {\r\n       \r\n        \r\n        \r\n    }\r\n\r\n    const login = () => \r\n    {\r\n        Axios.post('https://weather-mysql-deploy.herokuapp.com/api/login',\r\n        {\r\n            username:username,\r\n            password:password\r\n        }).then((response) =>\r\n        {\r\n            console.log(response.data.err);\r\n            if(response.data.message)\r\n            {\r\n                alert(response.data.message)\r\n                setLoginStatus(\"unlogged\");\r\n            }else\r\n            {\r\n                setLoginStatus(\"logged\");\r\n                history.push(\"/my-weather\");\r\n            }\r\n            if(response.data.err){\r\n                alert(\"Błąd servera - offline\")\r\n            }\r\n        })\r\n    }\r\n    const registerBtn = () =>\r\n    {\r\n        setX(\"-400\");\r\n        setY(\"-400\");\r\n        setZ(\"110\");\r\n    }\r\n    const loginBtn = () =>\r\n    {\r\n        setX(\"0\");\r\n        setY(\"450\");\r\n        setZ(\"0\");\r\n    }\r\n    const logout = () =>\r\n    {\r\n        Axios.post('https://weather-mysql-deploy.herokuapp.com/api/logout')\r\n            .then((response) =>\r\n            {\r\n            console.log(response);\r\n            if(response.data.message)\r\n            {\r\n                setLoginStatus(\"logged\");\r\n            }else\r\n            {\r\n                setLoginStatus(\"unlogged\");\r\n            }\r\n        })\r\n        Axios.get('https://weather-mysql-deploy.herokuapp.com/api/logout').then((response)=>\r\n        {\r\n            if(response.data.loggedIn===false)\r\n            {\r\n                console.log(response);\r\n                setLoginStatus(\"unlogged\");\r\n            }else\r\n            {\r\n                setLoginStatus(\"logged\");\r\n                console.log(response);\r\n            }\r\n        })\r\n        window.location.reload(false);\r\n    }\r\n    useEffect(()=>\r\n    {\r\n        Axios.get('https://weather-mysql-deploy.herokuapp.com/api/login').then((response)=>\r\n        {\r\n            if(response.data.loggedIn===true)\r\n            {\r\n                setLoginStatus(response.data.user[0].username);\r\n                console.log(response);\r\n            }else\r\n            {\r\n                setLoginStatus(\"unlogged\");\r\n            }\r\n        })\r\n    },[])\r\n    if(loginStatus===\"unlogged\")\r\n    {\r\n        return(\r\n            <div className=\"hero\"   style={\r\n                                    { \r\n                                        backgroundImage: `url(\"/images/bg_signUp.jpg\")` \r\n                                    }\r\n            }>\r\n                <div className=\"form-box\">\r\n                    <div className=\"button-box\">\r\n                        <div className=\"btn\"style={\r\n                                            {\r\n                                                'transform':`translateX(${z}px)`\r\n                                            }\r\n                        }>\r\n                        </div>\r\n                        <button type=\"button\" className=\"toggle-btn\" onClick={() => loginBtn()}> Log In </button>\r\n                        <button type=\"button\" className=\"toggle-btn\" onClick={() => registerBtn()}> Register </button>\r\n                    </div>\r\n                    <div className=\"login-input-group\"  style={\r\n                                                        {\r\n                                                            'transform':`translateX(${x}px)`\r\n                                                        }\r\n                    }>\r\n                        \r\n                        <input type=\"text\" className=\"input-field\" placeholder=\"Nazwa Użytkownika\" \r\n                        onChange={(e)=>{setUsername(e.target.value)}}/>\r\n\r\n                        <input type=\"password\"  className=\"input-field\" placeholder=\"Hasło\" \r\n                        onChange={(e)=>{setPassword(e.target.value)}}/>\r\n\r\n                        <button className=\"submit-btn\" onClick={login}>Zaloguj </button>\r\n                        \r\n                        <Link to='/my-weather'><button type=\"submit\" className=\"submit-btn\"> Powrót </button></Link>\r\n\r\n                    </div>\r\n                    <div className=\"register-input-group\"   style={\r\n                                                            {\r\n                                                                'transform':`translateX(${y}px)`\r\n                                                            }\r\n                    }>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <input type=\"text\" minlength=\"4\" className=\"input-field\" placeholder=\"Nazwa Użytkownika\"\r\n                        {...register(\"user\", {\r\n                            required: \"Required\",\r\n                        })}/>   \r\n                        <input type=\"password\" minlength=\"8\" className=\"input-field\" placeholder=\"Hasło\"\r\n                        {...register(\"password\", {\r\n                            required: \"Required\",\r\n                        })}/> \r\n\r\n                        <input type=\"submit\" className=\"submit-btn2\" value=\"Zarejestruj\"/> \r\n                        {errors.message && errors.message.message}\r\n                        </form>\r\n                        <Link to='/my-weather'><button type=\"submit\" className=\"submit-btn\"> Powrót </button></Link>\r\n\r\n                    </div>\r\n                </div>   \r\n            </div>\r\n        )   \r\n    }else\r\n    {\r\n        return(\r\n            <div className=\"hero\"   style={\r\n                                    { \r\n                                        backgroundImage: `url(\"/images/bg_signUp.jpg\")` \r\n                                    }\r\n            }>\r\n                <div className=\"form-box\">\r\n                    <div className=\"login-input-group\" >\r\n                        <h1>Jesteś już zalogowany jako  {loginStatus}</h1>\r\n\r\n                        <button type=\"submit\" className=\"submit-btn2\" onClick={logout}> Wyloguj </button>\r\n                        \r\n                        <Link to='/my-weather'><button type=\"submit\" className=\"submit-btn\"> Powrót </button></Link>\r\n                    </div>\r\n                </div>   \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SignUp;\r\n","import './App.css';\r\nimport CurrentWeather from './components/currentWeather/CurrentWeather';\r\nimport Navbar from './Menu/Navbar'\r\nimport {Router as Router, Switch, Route} from 'react-router-dom';\r\nimport UserPanel from './components/UserPanel/UserPanel';\r\nimport AirCondition from './components/AirCondition/AirCondition';\r\nimport Compare from './components/Compare/Compare';\r\nimport SignUp from './components/SignUp/SignUp';\r\n\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nfunction App() \r\n{\r\n  return (\r\n    <Router history={history}>\r\n      <Navbar/>\r\n      <Switch>\r\n        <Route path='/' exact component={CurrentWeather}/>\r\n        <Route path='/my-weather' exact component={UserPanel}/>\r\n        <Route path='/air-condition' exact component={AirCondition}/>\r\n        <Route path='/compare' exact component={Compare}/>\r\n        <Route path='/sign-up' exact component={SignUp}/>\r\n      </Switch>\r\n    </Router>\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}