{"ast":null,"code":"import _defineProperty from\"C:/Users/vened/Desktop/Weather/my_weather/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"C:/Users/vened/Desktop/Weather/my_weather/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:/Users/vened/Desktop/Weather/my_weather/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/vened/Desktop/Weather/my_weather/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/vened/Desktop/Weather/my_weather/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/vened/Desktop/Weather/my_weather/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import WeatherItem from'./WeatherItem';import Form from'../Form/Form';import CalDate from'../Functions/CalDate';import CalTime from'../Functions/CalTime';import CalCelsius from'../Functions/CalCelsius';import CalWindSpeed from'../Functions/CalWindSpeed';import ForecastDailyItem from'./ForecastDailyItem';import ForecastHourlyItem from'./ForecastHourlyItem';import'./Forecast.css';import'./CurrentWeather.css';import{Line}from'react-chartjs-2';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var API_key=\"157d33f8987d245bc6a1997408e90015\";//const localTime = new Date().toLocaleString()\nvar CurrentWeather=/*#__PURE__*/function(_React$Component){_inherits(CurrentWeather,_React$Component);var _super=_createSuper(CurrentWeather);function CurrentWeather(props){var _this;_classCallCheck(this,CurrentWeather);_this=_super.call(this,props);_this.nextProperty=function(Property,Elements){var newIndex=Property.id+1;_this.setState({Property:Elements[newIndex]});console.log(newIndex);};_this.prevProperty=function(Property,Elements){var newIndex=Property.id-1;_this.setState({Property:Elements[newIndex]});};_this.defaultWeather=function(cityName){_this.setState(function(state){return{city:cityName,error:false};});fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(cityName,\"&lang=pl&APPID=\").concat(API_key)).then(function(response){if(response.ok){return response;}else{_this.setState(function(state){return{city:state.value};});throw Error(\"Błąd pobierania danych z API\");}}).then(function(response){return response.json();}).then(function(response){_this.getForecastDaily(response.coord.lat,response.coord.lon);_this.getForecastHourly(response.coord.lat,response.coord.lon);_this.getAirQuality(response.coord.lat,response.coord.lon);_this.setState(function(state){return{city:state.city,country:response.sys.country,date:CalDate(response.dt,response.timezone),time:CalTime(response.dt,response.timezone),timezone:response.timezone,weather:response.weather[0].description,temp:CalCelsius(response.main.temp),tempMax:CalCelsius(response.main.temp_max),tempMin:CalCelsius(response.main.temp_min),tempFeel:CalCelsius(response.main.feels_like),pressure:response.main.pressure,wind:CalWindSpeed(response.wind.speed),image:weatherIcons[response.weather[0].id],lat:response.coord.lat,lon:response.coord.lon,clouds:response.clouds.all,humidity:response.main.humidity,sunrise:CalTime(response.sys.sunrise,response.timezone),sunset:CalTime(response.sys.sunset,response.timezone),background:\"/images/cloudyCity.jpg\",error:false};});for(var i=0;i<12;i++){if(_this.state.time>_this.state.sunset&&_this.state.time<_this.state.sunrise&&response.weather[0].id==nightIcons[i]){_this.setState({image:weatherIcons[response.weather[0].id+1000]});}}}).catch(function(err){console.log(err);_this.setState(function(prevState){return{errorCity:true,city:prevState.city};});});};_this.getWeather=function(e){e.preventDefault();_this.setState({forecastDailyElements:[],forecastHourlyElements:[]});fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(_this.state.value,\"&lang=pl&APPID=\").concat(API_key)).then(function(response){if(response.ok){return response;}else{_this.setState(function(state){return{city:state.value};});throw Error(\"Błąd pobierania danych z API\");}}).then(function(response){return response.json();}).then(function(response){console.log(response);_this.setState(function(state){return{city:state.value,country:response.sys.country,timezone:response.timezone,date:CalDate(response.dt,response.timezone),time:CalTime(response.dt,response.timezone),weather:response.weather[0].description,temp:CalCelsius(response.main.temp),tempMax:CalCelsius(response.main.temp_max),tempMin:CalCelsius(response.main.temp_min),tempFeel:CalCelsius(response.main.feels_like),pressure:response.main.pressure,wind:CalWindSpeed(response.wind.speed),image:weatherIcons[response.weather[0].id],lat:response.coord.lat,lon:response.coord.lon,clouds:response.clouds.all,humidity:response.main.humidity,sunrise:CalTime(response.sys.sunrise,response.timezone),sunset:CalTime(response.sys.sunset,response.timezone),background:\"/images/cloudyCity.jpg\",error:false};});for(var i=0;i<12;i++){if(_this.state.time>_this.state.sunset&&response.weather[0].id==nightIcons[i]){_this.setState({image:weatherIcons[response.weather[0].id+1000]});}}_this.getForecastDaily(response.coord.lat,response.coord.lon);_this.getForecastHourly(response.coord.lat,response.coord.lon);_this.getAirQuality(response.coord.lat,response.coord.lon);}).catch(function(err){console.log(err);_this.setState(function(prevState){return{error:true,city:prevState.city};});});};_this.getForecastDaily=function(lat,lon,typeF){_this.setState({forecastDailyElements:[]});fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\".concat(lat,\"&lon=\").concat(lon,\"&lang=pl&appid=\").concat(API_key)).then(function(response){if(response.ok){return response;}throw Error(\"Błąd pobierania danych z API\");}).then(function(response){return response.json();}).then(function(response){for(var i=0;i<8;i++){_this.setState({forecastDailyElements:[].concat(_toConsumableArray(_this.state.forecastDailyElements),[{'id':i,'date':CalDate(response.daily[i].dt,_this.state.timezone),'weather':response.daily[i].weather[0].description,'tempMax':CalCelsius(response.daily[i].temp.max),'tempMin':CalCelsius(response.daily[i].temp.min),'pressure':response.daily[i].pressure,'wind':CalWindSpeed(response.daily[i].wind_speed),'image':weatherIcons[response.daily[i].weather[0].id],'clouds':response.daily[i].clouds,'humidity':response.daily[i].humidity,'sunrise':CalTime(response.daily[i].sunrise,response.timezone_offset),'sunset':CalTime(response.daily[i].sunset,response.timezone_offset)}])});}_this.setState({Property:_this.state.forecastDailyElements[0],forecastElements:_this.state.forecastDailyElements,tpyeOfForecast:\"Godzinowa\"});});};_this.getForecastHourly=function(lat,lon){_this.setState({forecastHourlyElements:[],tempData:[],tempTime:[],tempPress:[],tempHumid:[]});fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\".concat(lat,\"&lon=\").concat(lon,\"&lang=pl&appid=\").concat(API_key)).then(function(response){if(response.ok){return response;}throw Error(\"Błąd pobierania danych z API\");}).then(function(response){return response.json();}).then(function(response){for(var i=0;i<48;i++){_this.setState({forecastHourlyElements:[].concat(_toConsumableArray(_this.state.forecastHourlyElements),[{'id':i,'date':CalDate(response.hourly[i].dt,_this.state.timezone),'time':CalTime(response.hourly[i].dt,response.timezone_offset),'weather':response.hourly[i].weather[0].description,'temp':CalCelsius(response.hourly[i].temp),'tempFeel':CalCelsius(response.hourly[i].feels_like),'pressure':response.hourly[i].pressure,'humidity':response.hourly[i].humidity,'wind':CalWindSpeed(response.hourly[i].wind_speed),'image':weatherIcons[response.hourly[i].weather[0].id],'clouds':response.hourly[i].clouds}]),tempData:[].concat(_toConsumableArray(_this.state.tempData),[CalCelsius(response.hourly[i].temp)]),tempTime:[].concat(_toConsumableArray(_this.state.tempTime),[CalTime(response.hourly[i].dt,response.timezone_offset)]),tempPress:[].concat(_toConsumableArray(_this.state.tempPress),[response.hourly[i].pressure]),tempHumid:[].concat(_toConsumableArray(_this.state.tempHumid),[response.hourly[i].humidity])});_this.setState({Property:_this.state.forecastHourlyElements[0]});}_this.setState({dataTemperature:{labels:_this.state.tempTime,datasets:[{label:'Temperatura:',data:_this.state.tempData,fill:false,backgroundColor:'rgb(209, 157, 12)',borderColor:'rgb(0, 0, 0)'}]},dataPressure:{labels:_this.state.tempTime,datasets:[{label:'Ciśnienie:',data:_this.state.tempPress,fill:false,backgroundColor:'rgb(209, 157, 12)',borderColor:'rgb(0, 0, 0)'}]},dataHumiity:{labels:_this.state.tempTime,datasets:[{label:'Wilgotność:',data:_this.state.tempHumid,fill:false,backgroundColor:'rgb(209, 157, 12)',borderColor:'rgb(0, 0, 0)'}]}});_this.setState({data:_this.state.dataTemperature});});};_this.inputHandler=function(e){_this.setState({value:e.target.value});};_this.setForecast=function(){if(_this.state.forecast){var _this$setState;_this.setState((_this$setState={forecast:false,Property:_this.state.forecastHourlyElements[0],forecastElements:[]},_defineProperty(_this$setState,\"forecastElements\",_this.state.forecastHourlyElements),_defineProperty(_this$setState,\"tpyeOfForecast\",\"Dzienna\"),_this$setState));}else{var _this$setState2;_this.setState((_this$setState2={forecast:true,Property:_this.state.forecastDailyElements[0],forecastElements:[]},_defineProperty(_this$setState2,\"forecastElements\",_this.state.forecastDailyElements),_defineProperty(_this$setState2,\"tpyeOfForecast\",\"Godzinowa\"),_this$setState2));}};_this.selectData=function(chartDataSource){if(chartDataSource==1){_this.setState({data:_this.state.dataTemperature});}if(chartDataSource==2){_this.setState({data:_this.state.dataPressure});}if(chartDataSource==3){_this.setState({data:_this.state.dataHumiity});}};_this.state={value:\"\",city:\"\",country:\"\",aqi:undefined,pm2_5:undefined,image:undefined,background:undefined,weather:undefined,temp:undefined,tempMax:undefined,tempMin:undefined,tempFeel:undefined,pressurre:undefined,wind:undefined,lat:undefined,lon:undefined,clouds:undefined,humidity:undefined,sunrise:undefined,sunset:undefined,content:undefined,forecastDailyElements:[],forecastHourlyElements:[],forecastElements:[],Property:undefined,hourlyProperty:undefined,forecast:true,tpyeOfForecast:undefined,error:false,tempData:[],tempPress:[],tempHumid:[],tempTime:[],data:{labels:[],datasets:[{label:'',data:[],fill:false,backgroundColor:'rgb(0, 0, 0)',borderColor:'rgba(0, 0, 0, 0)'}]},dataTemperature:{labels:[],datasets:[{label:'',data:[],fill:false,backgroundColor:'rgb(0, 0, 0)',borderColor:'rgba(0, 0, 0, 0)'}]},dataPressure:{labels:[],datasets:[{label:'',data:[],fill:false,backgroundColor:'rgb(0, 0, 0)',borderColor:'rgba(0, 0, 0, 0)'}]},dataHumiity:{labels:[],datasets:[{label:'',data:[],fill:false,backgroundColor:'rgb(0, 0, 0)',borderColor:'rgba(0, 0, 0, 0)'}]},options:{plugins:{legend:{display:true,labels:{color:'black'}}},maintainAspectRatio:false,scales:{y:{ticks:{color:\"black\",font:{size:10},stepSize:1,beginAtZero:true}},x:{ticks:{color:\"black\",font:{size:14},stepSize:1,beginAtZero:true}}}}};return _this;}_createClass(CurrentWeather,[{key:\"getAirQuality\",value:function getAirQuality(lat,lon){var _this2=this;fetch(\"http://api.openweathermap.org/data/2.5/air_pollution?lat=\".concat(lat,\"&lon=\").concat(lon,\"&appid=\").concat(API_key)).then(function(response){if(response.ok){return response;}throw Error(\"Błąd pobierania danych z API\");}).then(function(response){return response.json();}).then(function(response){_this2.setState(function(state){return{aqi:airConditions[response.list[0].main.aqi],pm2_5:response.list[0].components.pm2_5,color:response.list[0].main.aqi,error:false};});}).catch(function(err){console.log(err);_this2.setState(function(prevState){return{error:true,city:prevState.city};});});}},{key:\"componentDidMount\",value:function componentDidMount(){this.defaultWeather(\"Warszawa\");}},{key:\"render\",value:function render(){var _this3=this;if(this.state.forecast){this.state.content=this.state.forecastDailyElements.map(function(fde){return/*#__PURE__*/_jsx(ForecastDailyItem,{element:fde},fde.id);});}else{this.state.content=this.state.forecastHourlyElements.map(function(fde){return/*#__PURE__*/_jsx(ForecastHourlyItem,{element:fde},fde.id);});}return/*#__PURE__*/_jsxs(\"div\",{className:\"main\",style:{backgroundImage:\"url(\\\"/images/bg.jpg\\\")\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"city-form\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Wyszukaj miasto dla kt\\xF3rego chcesz sprawdzi\\u0107 obecne warunki pogodowe oraz prognozy pogody\"}),/*#__PURE__*/_jsx(Form,{value:this.state.value,handler:this.inputHandler,submit:this.getWeather})]}),/*#__PURE__*/_jsx(\"div\",{className:\"current-main\",children:this.state.city?/*#__PURE__*/_jsx(WeatherItem,{element:this.state,selectD:this.selectData}):null}),/*#__PURE__*/_jsx(\"div\",{className:\"forecast-main\",children:this.state.Property?/*#__PURE__*/_jsxs(\"div\",{className:\"forecast-cards\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"left\",style:{backgroundImage:\"url(\\\"/images/arrow_left.png\\\")\"},onClick:function onClick(){return _this3.prevProperty(_this3.state.Property,_this3.state.forecastElements);},disabled:this.state.Property.id===0}),/*#__PURE__*/_jsx(\"button\",{className:\"swap-button\",onClick:function onClick(){return _this3.setForecast();},children:this.state.tpyeOfForecast}),/*#__PURE__*/_jsx(\"button\",{className:\"right\",style:{backgroundImage:\"url(\\\"/images/arrow_right.png\\\")\"},onClick:function onClick(){return _this3.nextProperty(_this3.state.Property,_this3.state.forecastElements);},disabled:this.state.Property.id===this.state.forecastElements.length-3}),/*#__PURE__*/_jsx(\"div\",{className:\"main-cards\",children:/*#__PURE__*/_jsx(\"div\",{className:\"cards-slider\",children:/*#__PURE__*/_jsx(\"div\",{className:\"cards-slider-wrapper\",style:{'transform':\"translateX(-\".concat(this.state.Property.id*(100/this.state.forecastElements.length),\"%)\")},children:this.state.content})})})]}):null})]});}}]);return CurrentWeather;}(React.Component);;var nightIcons={0:230,1:300,2:310,3:500,4:520,5:600,6:612,7:615,8:620,9:800,10:801,11:802,12:803};var weatherIcons={200:'/images/200.png',201:'/images/201.png',202:'/images/202.png',210:'/images/210.png',211:'/images/211.png',212:'/images/212.png',221:'/images/212.png',230:'/images/230D.png',1230:'/images/230N.png',231:'/images/231.png',232:'/images/232.png',300:'/images/300D.png',1300:'/images/300N.png',301:'/images/301.png',302:'/images/302.png',310:'/images/310D.png',1310:'/images/310N.png',311:'/images/311.png',312:'/images/312.png',313:'/images/313_1.png',314:'/images/314.png',321:'/images/321.png',500:'/images/500D.png',1500:'/images/500N.png',501:'/images/501.png',502:'/images/502.png',503:'/images/503.png',504:'/images/504.png',511:'/images/511.png',520:'/images/520D.png',1520:'/images/520N_1.png',521:'/images/521_2.png',522:'/images/522_1.png',531:'/images/522_1.png',600:'/images/600D.png',1600:'/images/600N.png',601:'/images/601.png',602:'/images/602.png',611:'/images/611.png',612:'/images/612D.png',1612:'/images/612N.png',613:'/images/613.png',615:'/images/615D.png',1615:'/images/615N.png',616:'/images/616.png',620:'/images/620D.png',1620:'/images/620N.png',621:'/images/621.png',622:'/images/622.png',701:'/images/701_2.png',711:'/images/701_2.png',721:'/images/701_2.png',731:'/images/701_2.png',741:'/images/701_2.png',751:'/images/701_2.png',761:'/images/701_2.png',762:'/images/701_2.png',771:'/images/701_2.png',781:'/images/701_2.png',800:'/images/800D.png',1800:'/images/800N.png',801:'/images/801D.png',1801:'/images/801N.png',802:'/images/802D.png',1802:'/images/802N.png',803:'/images/803D.png',1803:'/images/803N.png',804:'/images/804.png'};var airConditions={1:'Bardzo dobra',2:'Dobra',3:'Średnia',4:'Zła',5:'Bardzo zła'};export default CurrentWeather;","map":{"version":3,"sources":["C:/Users/vened/Desktop/Weather/my_weather/client/src/components/currentWeather/CurrentWeather.js"],"names":["React","WeatherItem","Form","CalDate","CalTime","CalCelsius","CalWindSpeed","ForecastDailyItem","ForecastHourlyItem","Line","API_key","CurrentWeather","props","nextProperty","Property","Elements","newIndex","id","setState","console","log","prevProperty","defaultWeather","cityName","state","city","error","fetch","then","response","ok","value","Error","json","getForecastDaily","coord","lat","lon","getForecastHourly","getAirQuality","country","sys","date","dt","timezone","time","weather","description","temp","main","tempMax","temp_max","tempMin","temp_min","tempFeel","feels_like","pressure","wind","speed","image","weatherIcons","clouds","all","humidity","sunrise","sunset","background","i","nightIcons","catch","err","prevState","errorCity","getWeather","e","preventDefault","forecastDailyElements","forecastHourlyElements","typeF","daily","max","min","wind_speed","timezone_offset","forecastElements","tpyeOfForecast","tempData","tempTime","tempPress","tempHumid","hourly","dataTemperature","labels","datasets","label","data","fill","backgroundColor","borderColor","dataPressure","dataHumiity","inputHandler","target","setForecast","forecast","selectData","chartDataSource","aqi","undefined","pm2_5","pressurre","content","hourlyProperty","options","plugins","legend","display","color","maintainAspectRatio","scales","y","ticks","font","size","stepSize","beginAtZero","x","airConditions","list","components","map","fde","backgroundImage","length","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport WeatherItem from './WeatherItem';\r\nimport Form from '../Form/Form'\r\nimport CalDate from '../Functions/CalDate';\r\nimport CalTime from '../Functions/CalTime';\r\nimport CalCelsius from '../Functions/CalCelsius';\r\nimport CalWindSpeed from '../Functions/CalWindSpeed';\r\nimport ForecastDailyItem from './ForecastDailyItem';\r\nimport ForecastHourlyItem from './ForecastHourlyItem';\r\nimport './Forecast.css';\r\nimport './CurrentWeather.css';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\n\r\nconst API_key=\"157d33f8987d245bc6a1997408e90015\"\r\n//const localTime = new Date().toLocaleString()\r\n\r\nclass CurrentWeather extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        \r\n        super(props)\r\n        this.state=\r\n        {\r\n            value:\"\",\r\n            city:\"\",\r\n            country:\"\",\r\n            aqi:undefined,\r\n            pm2_5:undefined,\r\n            image:undefined,\r\n            background:undefined,\r\n            weather:undefined,\r\n            temp:undefined,\r\n            tempMax:undefined,\r\n            tempMin:undefined,\r\n            tempFeel:undefined,\r\n            pressurre:undefined,\r\n            wind:undefined,\r\n            lat:undefined,\r\n            lon:undefined,\r\n            clouds:undefined, \r\n            humidity:undefined,\r\n            sunrise:undefined,\r\n            sunset:undefined,\r\n            content:undefined,\r\n            forecastDailyElements:[],\r\n            forecastHourlyElements:[],\r\n            forecastElements:[],\r\n            Property: undefined,\r\n            hourlyProperty: undefined,\r\n            forecast:true,\r\n            tpyeOfForecast:undefined,\r\n            error:false,\r\n            tempData:[],\r\n            tempPress:[],\r\n            tempHumid:[],\r\n            tempTime:[],\r\n            data :{\r\n                labels: [],\r\n                datasets: [\r\n                  {\r\n                    label: '',\r\n                    data: [],\r\n                    fill: false,\r\n                    backgroundColor: 'rgb(0, 0, 0)',\r\n                    borderColor: 'rgba(0, 0, 0, 0)',\r\n                  },\r\n                ],\r\n            },\r\n            dataTemperature :{\r\n                labels: [],\r\n                datasets: [\r\n                  {\r\n                    label: '',\r\n                    data: [],\r\n                    fill: false,\r\n                    backgroundColor: 'rgb(0, 0, 0)',\r\n                    borderColor: 'rgba(0, 0, 0, 0)',\r\n                  },\r\n                ],\r\n            },\r\n            dataPressure :{\r\n                labels: [],\r\n                datasets: [\r\n                  {\r\n                    label: '',\r\n                    data: [],\r\n                    fill: false,\r\n                    backgroundColor: 'rgb(0, 0, 0)',\r\n                    borderColor: 'rgba(0, 0, 0, 0)',\r\n                  },\r\n                ],\r\n            },\r\n            dataHumiity :{\r\n                labels: [],\r\n                datasets: [\r\n                  {\r\n                    label: '',\r\n                    data: [],\r\n                    fill: false,\r\n                    backgroundColor: 'rgb(0, 0, 0)',\r\n                    borderColor: 'rgba(0, 0, 0, 0)',\r\n                  },\r\n                ],\r\n            },\r\n            options : {\r\n                plugins: {\r\n                    legend: {\r\n                        display: true,\r\n                        labels: {\r\n                            color: 'black'\r\n                        }\r\n                    }\r\n                },\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                    y: {  \r\n                        ticks: {\r\n                          color: \"black\", \r\n                          font: {\r\n                            size: 10,\r\n                          },\r\n                          stepSize: 1,\r\n                          beginAtZero: true\r\n                        }\r\n                      },\r\n                      x: { \r\n                        ticks: {\r\n                          color: \"black\", \r\n                        \r\n                          font: {\r\n                            size: 14 \r\n                          },\r\n                          stepSize: 1,\r\n                          beginAtZero: true\r\n                        }\r\n                    }\r\n                },\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    nextProperty = (Property,Elements) => \r\n    {\r\n        const newIndex = Property.id +1;\r\n\r\n        this.setState(\r\n        {\r\n            Property: Elements[newIndex]\r\n        });\r\n\r\n        console.log(newIndex);\r\n    };\r\n\r\n    prevProperty= (Property,Elements) => \r\n    {\r\n        const newIndex = Property.id -1;\r\n\r\n        this.setState(\r\n        {\r\n            Property: Elements[newIndex]\r\n        });\r\n    };\r\n\r\n    defaultWeather = (cityName) => \r\n    {\r\n        this.setState(state =>(\r\n        {\r\n            city:cityName,\r\n            error:false\r\n        }))\r\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityName}&lang=pl&APPID=${API_key}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }else{\r\n                this.setState(state =>(\r\n                    {\r\n                        city:state.value,\r\n                    }))\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n\r\n            this.getForecastDaily(response.coord.lat,response.coord.lon)\r\n            this.getForecastHourly(response.coord.lat,response.coord.lon)\r\n            this.getAirQuality(response.coord.lat,response.coord.lon)\r\n            this.setState(state =>(\r\n            {\r\n                city:state.city,\r\n                country:response.sys.country,\r\n                date:CalDate(response.dt,response.timezone),\r\n                time:CalTime(response.dt,response.timezone),\r\n                timezone:response.timezone,\r\n                weather:response.weather[0].description,\r\n                temp:CalCelsius(response.main.temp),\r\n                tempMax:CalCelsius(response.main.temp_max),\r\n                tempMin:CalCelsius(response.main.temp_min),\r\n                tempFeel:CalCelsius(response.main.feels_like),\r\n                pressure:response.main.pressure,\r\n                wind:CalWindSpeed(response.wind.speed),\r\n                image:weatherIcons[response.weather[0].id],\r\n                lat:response.coord.lat,\r\n                lon:response.coord.lon,\r\n                clouds:response.clouds.all, \r\n                humidity:response.main.humidity,\r\n                sunrise:CalTime(response.sys.sunrise,response.timezone),\r\n                sunset:CalTime(response.sys.sunset,response.timezone),\r\n                background:\"/images/cloudyCity.jpg\",\r\n                error:false,\r\n            }))\r\n            for(var i=0; i<12;i++){\r\n                if((this.state.time>this.state.sunset) && (this.state.time<this.state.sunrise)&&(response.weather[0].id==nightIcons[i])){\r\n                    this.setState({\r\n                        image:weatherIcons[response.weather[0].id+1000],\r\n                    })\r\n                }\r\n              }\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err)\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                errorCity:true,\r\n                city:prevState.city\r\n            }})\r\n        })\r\n    };\r\n\r\n    getWeather = (e) =>\r\n    {\r\n        \r\n        e.preventDefault()\r\n        this.setState(\r\n            {\r\n                forecastDailyElements:[],\r\n                forecastHourlyElements:[]\r\n            })\r\n          \r\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }else{\r\n                this.setState(state =>(\r\n                    {\r\n                        city:state.value,\r\n                    }))\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n            }\r\n            \r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response)\r\n            this.setState(state =>(\r\n            {\r\n                city:state.value,\r\n                country:response.sys.country,\r\n                timezone:response.timezone,\r\n                date:CalDate(response.dt,response.timezone),\r\n                time:CalTime(response.dt,response.timezone),\r\n                weather:response.weather[0].description,\r\n                temp:CalCelsius(response.main.temp),\r\n                tempMax:CalCelsius(response.main.temp_max),\r\n                tempMin:CalCelsius(response.main.temp_min),\r\n                tempFeel:CalCelsius(response.main.feels_like),\r\n                pressure:response.main.pressure,\r\n                wind:CalWindSpeed(response.wind.speed),\r\n                image:weatherIcons[response.weather[0].id],\r\n                lat:response.coord.lat,\r\n                lon:response.coord.lon,\r\n                clouds:response.clouds.all, \r\n                humidity:response.main.humidity,\r\n                sunrise:CalTime(response.sys.sunrise,response.timezone),\r\n                sunset:CalTime(response.sys.sunset,response.timezone),\r\n                background:\"/images/cloudyCity.jpg\",\r\n                error:false\r\n              }))\r\n              for(var i=0; i<12;i++){\r\n                if((this.state.time>this.state.sunset) && (response.weather[0].id==nightIcons[i])){\r\n                    this.setState({\r\n                        image:weatherIcons[response.weather[0].id+1000],\r\n                    })\r\n                }\r\n              }\r\n              this.getForecastDaily(response.coord.lat,response.coord.lon)\r\n              this.getForecastHourly(response.coord.lat,response.coord.lon)\r\n              this.getAirQuality(response.coord.lat,response.coord.lon)\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err)\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n            }})\r\n        })\r\n    };\r\n\r\n    getAirQuality(lat,lon)\r\n    {\r\n        fetch(`http://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${lon}&appid=${API_key}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n                throw Error(\"Błąd pobierania danych z API\");\r\n          })\r\n        .then(response=> response.json())\r\n        .then(response => \r\n        {\r\n            this.setState(state =>(\r\n            {\r\n                aqi:airConditions[response.list[0].main.aqi],\r\n                pm2_5:response.list[0].components.pm2_5,\r\n                color:response.list[0].main.aqi,\r\n                error:false\r\n            }))\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err)\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n            }})\r\n        })\r\n    };\r\n\r\n    getForecastDaily = (lat,lon,typeF)=>\r\n    {\r\n        this.setState(\r\n        {\r\n            forecastDailyElements:[]\r\n        })\r\n        \r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n                throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            for (var i = 0; i < 8; i++) \r\n            {\r\n                this.setState(\r\n                {\r\n                    forecastDailyElements:[...this.state.forecastDailyElements,\r\n                    {\r\n                        'id':i,\r\n                        'date':CalDate(response.daily[i].dt,this.state.timezone),\r\n                        'weather':response.daily[i].weather[0].description,\r\n                        'tempMax':CalCelsius(response.daily[i].temp.max),\r\n                        'tempMin':CalCelsius(response.daily[i].temp.min),\r\n                        'pressure':response.daily[i].pressure,\r\n                        'wind':CalWindSpeed(response.daily[i].wind_speed),\r\n                        'image':weatherIcons[response.daily[i].weather[0].id],\r\n                        'clouds':response.daily[i].clouds,\r\n                        'humidity':response.daily[i].humidity,\r\n                        'sunrise':CalTime(response.daily[i].sunrise,response.timezone_offset) ,\r\n                        'sunset':CalTime(response.daily[i].sunset,response.timezone_offset)\r\n                    }],\r\n                    \r\n                })\r\n            }\r\n            this.setState(\r\n            {\r\n                Property:this.state.forecastDailyElements[0],\r\n                forecastElements:this.state.forecastDailyElements,\r\n                tpyeOfForecast:\"Godzinowa\"\r\n            })  \r\n          })\r\n    };\r\n\r\n    getForecastHourly = (lat,lon)=>\r\n    {\r\n        this.setState(\r\n        {\r\n            forecastHourlyElements:[],\r\n            tempData:[],\r\n            tempTime:[],\r\n            tempPress:[],\r\n            tempHumid:[],\r\n        })\r\n\r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n                throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            for (var i = 0; i < 48; i++) \r\n            {\r\n                this.setState(\r\n                {\r\n                    forecastHourlyElements:[...this.state.forecastHourlyElements,\r\n                    {\r\n                        'id':i,\r\n                        'date':CalDate(response.hourly[i].dt,this.state.timezone),\r\n                        'time':CalTime(response.hourly[i].dt,response.timezone_offset),\r\n                        'weather':response.hourly[i].weather[0].description,\r\n                        'temp':CalCelsius(response.hourly[i].temp),\r\n                        'tempFeel':CalCelsius(response.hourly[i].feels_like),\r\n                        'pressure':response.hourly[i].pressure,\r\n                        'humidity':response.hourly[i].humidity,\r\n                        'wind':CalWindSpeed(response.hourly[i].wind_speed),\r\n                        'image':weatherIcons[response.hourly[i].weather[0].id],\r\n                        'clouds':response.hourly[i].clouds,\r\n                    }],\r\n                    \r\n                    tempData:[...this.state.tempData,CalCelsius(response.hourly[i].temp)],\r\n                    tempTime:[...this.state.tempTime,CalTime(response.hourly[i].dt,response.timezone_offset)],\r\n                    tempPress:[...this.state.tempPress,response.hourly[i].pressure],\r\n                    tempHumid:[...this.state.tempHumid,response.hourly[i].humidity],\r\n                    \r\n                })\r\n            this.setState(\r\n            {\r\n                Property:this.state.forecastHourlyElements[0],\r\n            })\r\n            }\r\n            this.setState(\r\n            {\r\n                dataTemperature:{\r\n                    labels: this.state.tempTime,\r\n                    datasets: [\r\n                    {\r\n                        label: 'Temperatura:',\r\n                        data: this.state.tempData,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(209, 157, 12)',\r\n                        borderColor: 'rgb(0, 0, 0)',\r\n                    },\r\n                    ],\r\n                },\r\n                dataPressure:{\r\n                    labels: this.state.tempTime,\r\n                    datasets: [\r\n                    {\r\n                        label: 'Ciśnienie:',\r\n                        data: this.state.tempPress,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(209, 157, 12)',\r\n                        borderColor: 'rgb(0, 0, 0)',\r\n                    },\r\n                ],\r\n                },\r\n                dataHumiity:{\r\n                    labels: this.state.tempTime,\r\n                    datasets: [\r\n                    {\r\n                        label: 'Wilgotność:',\r\n                        data: this.state.tempHumid,\r\n                        fill: false,\r\n                        backgroundColor: 'rgb(209, 157, 12)',\r\n                        borderColor: 'rgb(0, 0, 0)',\r\n                    },\r\n                ],\r\n                }\r\n                \r\n            })\r\n            this.setState(\r\n            {\r\n                data:this.state.dataTemperature\r\n            })\r\n          })\r\n    };\r\n\r\n    inputHandler=(e)=>\r\n    {\r\n        this.setState(\r\n            {\r\n            value:e.target.value\r\n        })\r\n    };\r\n\r\n    componentDidMount()\r\n    {\r\n        this.defaultWeather(\"Warszawa\")\r\n    };\r\n\r\n    setForecast=()=>\r\n    {\r\n        if(this.state.forecast)\r\n        {\r\n            this.setState(\r\n            {\r\n                forecast:false,\r\n                Property:this.state.forecastHourlyElements[0],  \r\n                forecastElements:[],  \r\n                forecastElements:this.state.forecastHourlyElements,\r\n                tpyeOfForecast:\"Dzienna\"\r\n            })\r\n        }\r\n        else\r\n        {\r\n            this.setState(\r\n            {\r\n                forecast:true,\r\n                Property:this.state.forecastDailyElements[0],\r\n                forecastElements:[],\r\n                forecastElements:this.state.forecastDailyElements,\r\n                tpyeOfForecast:\"Godzinowa\"\r\n            })\r\n        }\r\n    };\r\n\r\n    selectData = (chartDataSource) => {\r\n        if(chartDataSource==1)\r\n        {\r\n            this.setState({\r\n                data:this.state.dataTemperature\r\n            })\r\n        }\r\n        if(chartDataSource==2)\r\n        {\r\n            this.setState({\r\n                data:this.state.dataPressure\r\n            })\r\n        }\r\n        if(chartDataSource==3)\r\n        {\r\n            this.setState({\r\n                data:this.state.dataHumiity\r\n            })\r\n        }\r\n    };\r\n\r\n    render()\r\n    {\r\n        \r\n        if(this.state.forecast)\r\n        {\r\n            this.state.content = (\r\n                this.state.forecastDailyElements.map(fde => <ForecastDailyItem key={fde.id} element={fde} />)\r\n            )\r\n        }else{\r\n\r\n            this.state.content = (\r\n                this.state.forecastHourlyElements.map(fde => <ForecastHourlyItem key={fde.id} element={fde} />)\r\n            )\r\n        }\r\n            return(\r\n                    <div className=\"main\"   style={\r\n                                            { \r\n                                                backgroundImage: `url(\"/images/bg.jpg\")` \r\n                                            }\r\n                    }>\r\n                        <div className=\"city-form\">\r\n                            <h1>Wyszukaj miasto dla którego chcesz sprawdzić obecne warunki pogodowe oraz prognozy pogody</h1>\r\n                            <Form \r\n                                value={this.state.value}  \r\n                                handler={this.inputHandler}\r\n                                submit={this.getWeather}\r\n                            /> \r\n                        </div> \r\n                        <div className=\"current-main\">\r\n                            {this.state.city ?(\r\n                                <WeatherItem element={this.state} selectD={this.selectData}/>   \r\n                            ):null}\r\n                        </div>\r\n                        <div className=\"forecast-main\">\r\n                            {this.state.Property ?( \r\n                                <div className=\"forecast-cards\" >\r\n                                    <button className=\"left\"    style={\r\n                                                                { \r\n                                                                backgroundImage: `url(\"/images/arrow_left.png\")` \r\n                                                                }}\r\n                                            onClick={() => this.prevProperty(this.state.Property,this.state.forecastElements)} \r\n                                            disabled={this.state.Property.id === 0}\r\n                                    >\r\n                                    </button>\r\n                                    <button className=\"swap-button\"\r\n                                        onClick={() => this.setForecast()} \r\n                                    >\r\n                                        {this.state.tpyeOfForecast}\r\n                                    </button>\r\n                                    <button className=\"right\"   style={\r\n                                                                { \r\n                                                                    backgroundImage: `url(\"/images/arrow_right.png\")` \r\n                                                                }}\r\n                                            onClick={() => this.nextProperty(this.state.Property,this.state.forecastElements)} \r\n                                            disabled={this.state.Property.id === this.state.forecastElements.length-3}\r\n                                        >\r\n                                    </button>\r\n                                    <div className=\"main-cards\">  \r\n                                        <div className=\"cards-slider\">         \r\n                                            <div className=\"cards-slider-wrapper\"   style={\r\n                                                                                    {\r\n                                                                                        'transform':`translateX(-${this.state.Property.id*(100/this.state.forecastElements.length)}%)`\r\n                                                                                    }\r\n                                            }>\r\n                                                {this.state.content}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ):null}\r\n                        </div>\r\n                    </div>\r\n                )\r\n        }\r\n};\r\nconst nightIcons = {\r\n    0:230,\r\n    1:300,\r\n    2:310,\r\n    3:500,\r\n    4:520,\r\n    5:600,\r\n    6:612,\r\n    7:615,\r\n    8:620,\r\n    9:800,\r\n    10:801,\r\n    11:802,\r\n    12:803\r\n}\r\nconst weatherIcons = \r\n{\r\n    200:'/images/200.png',\r\n    201:'/images/201.png',\r\n    202:'/images/202.png',\r\n    210:'/images/210.png',\r\n    211:'/images/211.png',\r\n    212:'/images/212.png',\r\n    221:'/images/212.png',\r\n    230:'/images/230D.png',\r\n    1230:'/images/230N.png',\r\n    231:'/images/231.png',\r\n    232:'/images/232.png',\r\n    300:'/images/300D.png',\r\n    1300:'/images/300N.png',\r\n    301:'/images/301.png',\r\n    302:'/images/302.png',\r\n    310:'/images/310D.png',\r\n    1310:'/images/310N.png',\r\n    311:'/images/311.png',\r\n    312:'/images/312.png',\r\n    313:'/images/313_1.png',\r\n    314:'/images/314.png',\r\n    321:'/images/321.png',\r\n    500:'/images/500D.png',\r\n    1500:'/images/500N.png',\r\n    501:'/images/501.png',\r\n    502:'/images/502.png',\r\n    503:'/images/503.png',\r\n    504:'/images/504.png',\r\n    511:'/images/511.png',\r\n    520:'/images/520D.png',\r\n    1520:'/images/520N_1.png',\r\n    521:'/images/521_2.png',\r\n    522:'/images/522_1.png',\r\n    531:'/images/522_1.png',\r\n    600:'/images/600D.png',\r\n    1600:'/images/600N.png',\r\n    601:'/images/601.png',\r\n    602:'/images/602.png',\r\n    611:'/images/611.png',\r\n    612:'/images/612D.png',\r\n    1612:'/images/612N.png',\r\n    613:'/images/613.png',\r\n    615:'/images/615D.png',\r\n    1615:'/images/615N.png',\r\n    616:'/images/616.png',\r\n    620:'/images/620D.png',\r\n    1620:'/images/620N.png',\r\n    621:'/images/621.png',\r\n    622:'/images/622.png',\r\n    701:'/images/701_2.png',\r\n    711:'/images/701_2.png',\r\n    721:'/images/701_2.png',\r\n    731:'/images/701_2.png',\r\n    741:'/images/701_2.png',\r\n    751:'/images/701_2.png',\r\n    761:'/images/701_2.png',\r\n    762:'/images/701_2.png',\r\n    771:'/images/701_2.png',\r\n    781:'/images/701_2.png',\r\n    800:'/images/800D.png',\r\n    1800:'/images/800N.png',\r\n    801:'/images/801D.png',\r\n    1801:'/images/801N.png',\r\n    802:'/images/802D.png',\r\n    1802:'/images/802N.png',\r\n    803:'/images/803D.png',\r\n    1803:'/images/803N.png',\r\n    804:'/images/804.png',\r\n};\r\n\r\nconst airConditions = \r\n{\r\n    1:'Bardzo dobra',\r\n    2:'Dobra',\r\n    3:'Średnia',\r\n    4:'Zła',\r\n    5:'Bardzo zła',\r\n};\r\n\r\nexport default CurrentWeather;"]},"metadata":{},"sourceType":"module"}