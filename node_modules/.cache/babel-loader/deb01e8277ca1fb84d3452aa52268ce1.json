{"ast":null,"code":"import _defineProperty from\"C:/Users/vened/Desktop/Weather/my_weather/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"C:/Users/vened/Desktop/Weather/my_weather/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:/Users/vened/Desktop/Weather/my_weather/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/vened/Desktop/Weather/my_weather/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/vened/Desktop/Weather/my_weather/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/vened/Desktop/Weather/my_weather/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Form from'../Form/Form';import CalDate from'../Functions/CalDate';import CalCelsius from'../Functions/CalCelsius';import CalWindSpeed from'../Functions/CalWindSpeed';import CompareCurrentWeatherItem from'./CompareCurrentWeatherItem';import CompareForecastItem from'./CompareForecastItem';import'./Compare.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var API_key_OWM=\"157d33f8987d245bc6a1997408e90015\";var API_key_WA=\"d42d0d989ead4316b9d143558213105\";var API_key_w=\"4c7c27f8abf34ae09c61bad9a897be7e\";var Compare=/*#__PURE__*/function(_React$Component){_inherits(Compare,_React$Component);var _super=_createSuper(Compare);function Compare(props){var _this$state;var _this;_classCallCheck(this,Compare);_this=_super.call(this,props);_this.nextProperty=function(Property,Elements){var newIndex=Property.id+1;_this.setState({Property:Elements[newIndex]});console.log(newIndex);};_this.prevProperty=function(Property,Elements){var newIndex=Property.id-1;_this.setState({Property:Elements[newIndex]});};_this.setSource=function(source){_this.setState({source:source});if(source===\"OpenWeatherMap\"){_this.getForecastDailyOWM(_this.state.lat,_this.state.lon);}if(source===\"WeatherApi\"){_this.getForecastDailyWA(_this.state.city);}if(source===\"TommorowIO\"){_this.getForecastDailyTI(_this.state.lat,_this.state.lon);}if(source===\"VisualCrossing\"){_this.getForecastDailyVC(_this.state.city);}if(source===\"Weatherbit\"){_this.getForecastDailyWB(_this.state.city);}};_this.getDefaultCompare=function(city){console.log(city);_this.setState({compareCurrentElements:[]});fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city,\"&lang=pl&APPID=\").concat(API_key_OWM)).then(function(response){if(response.ok){return response;}throw Error(\"Błąd pobierania danych z API\");}).then(function(response){return response.json();}).then(function(response){console.log(response);_this.getForecastDailyOWM(response.coord.lat,response.coord.lon);_this.getWeatherWeatherApi(city);_this.getWeatherTommorowIo(response.coord.lat,response.coord.lon);_this.getWeatherVisualcrossing(city);_this.getWeatherWeatherbit(city);_this.setState({timezone:response.timezone,compareCurrentElements:[].concat(_toConsumableArray(_this.state.compareCurrentElements),[{'id':1,'date':CalDate(response.dt,response.timezone),'weather':response.weather[0].description,'temp':CalCelsius(response.main.temp),'pressure':response.main.pressure,'wind':CalWindSpeed(response.wind.speed),'image':weatherIcons[response.weather[0].id],'source':\"OpenWeatherMap\"}]),city:response.name,lat:response.coord.lat,lon:response.coord.lon,weatherComp:response.weather[0].description,tempComp:CalCelsius(response.main.temp),pressureComp:response.main.pressure,windComp:CalWindSpeed(response.wind.speed)});_this.setState({currentProperty:_this.state.compareCurrentElements[0]});return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city,\"&lang=pl&APPID=\").concat(API_key_OWM));}).then(function(responseAirQuality){return responseAirQuality.json();}).catch(function(err){console.log(err);_this.setState(function(prevState){return{error:true,errorOWM:true,city:prevState.city};});});};_this.getWeatherCompare=function(e){e.preventDefault();_this.setState({compareCurrentElements:[]});var result=fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(_this.state.value,\"&lang=pl&APPID=\").concat(API_key_OWM)).then(function(response){if(response.ok){return response;}else{_this.setState(function(state){return{city:state.value};});throw Error(\"Błąd pobierania danych z API\");}}).then(function(response){return response.json();}).then(function(response){console.log(response);_this.getForecastDailyOWM(response.coord.lat,response.coord.lon);_this.getWeatherWeatherApi(_this.state.value);_this.getWeatherTommorowIo(response.coord.lat,response.coord.lon);_this.getWeatherVisualcrossing(_this.state.value);_this.getWeatherWeatherbit(_this.state.value);_this.setState({timezone:response.timezone,errorCity:false,compareCurrentElements:[].concat(_toConsumableArray(_this.state.compareCurrentElements),[{'id':1,'date':CalDate(response.dt),'weather':response.weather[0].description,'temp':CalCelsius(response.main.temp),'pressure':response.main.pressure,'wind':CalWindSpeed(response.wind.speed),'image':weatherIcons[response.weather[0].id],'source':\"OpenWeatherMap\"}]),city:response.name,lat:response.coord.lat,lon:response.coord.lon,weatherComp:response.weather[0].description,tempComp:CalCelsius(response.main.temp),pressureComp:response.main.pressure,windComp:CalWindSpeed(response.wind.speed)});_this.setState({currentProperty:_this.state.compareCurrentElements[0]});return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(_this.state.value,\"&lang=pl&APPID=\").concat(API_key_OWM));}).then(function(responseAirQuality){return responseAirQuality.json();}).catch(function(err){console.log(err);_this.setState(function(prevState){return{error:true,errorCity:true,city:prevState.city};});});};_this.getForecastDailyOWM=function(lat,lon){console.log(lat);_this.setState({ForecastDailyElements:[]});fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\".concat(lat,\"&lon=\").concat(lon,\"&lang=pl&appid=\").concat(API_key_OWM)).then(function(response){if(response.ok){return response;}throw Error(\"Błąd pobierania danych z API\");}).then(function(response){return response.json();}).then(function(response){console.log(response);for(var i=0;i<8;i++){_this.setState({ForecastDailyElements:[].concat(_toConsumableArray(_this.state.ForecastDailyElements),[{'id':i,'date':CalDate(response.daily[i].dt,_this.state.timezone),'weather':response.daily[i].weather[0].description,'tempMax':CalCelsius(response.daily[i].temp.max),'tempMin':CalCelsius(response.daily[i].temp.min),'pressure':response.daily[i].pressure,'wind':CalWindSpeed(response.daily[i].wind_speed),'image':weatherIcons[response.daily[i].weather[0].id],'clouds':response.daily[i].clouds,'humidity':response.daily[i].humidity}])});};_this.setState({Property:_this.state.ForecastDailyElements[1]});});};_this.getWeatherWeatherApi=function(city){fetch(\"http://api.weatherapi.com/v1/current.json?key=\".concat(API_key_WA,\"&q=\").concat(city,\"&days=7&aqi=yes&alerts=yes&lang=pl\")).then(function(response){if(response.ok){return response;}throw Error(\"Błąd pobierania danych z API\");}).then(function(response){return response.json();}).then(function(response){console.log(response);_this.setState({compareCurrentElements:[].concat(_toConsumableArray(_this.state.compareCurrentElements),[{'id':2,'date':response.current.last_updated,'weather':response.current.condition.text,'temp':response.current.temp_c,'pressure':response.current.pressure_mb,'wind':response.current.wind_kph,'image':weatherIcons[response.current.condition.code],'source':\"WeatherApi\"}])});}).catch(function(err){console.log(err);_this.setState(function(prevState){return{error:true,city:prevState.city};});});};_this.getForecastDailyWA=function(city){_this.setState({ForecastDailyElements:[]});fetch(\"http://api.weatherapi.com/v1/forecast.json?key=\".concat(API_key_WA,\"&q=\").concat(city,\"&days=4&aqi=yes&alerts=yes&lang=pl\")).then(function(response){if(response.ok){return response;}throw Error(\"Błąd pobierania danych z API\");}).then(function(response){return response.json();}).then(function(response){console.log(response);for(var i=0;i<3;i++){_this.setState({ForecastDailyElements:[].concat(_toConsumableArray(_this.state.ForecastDailyElements),[{'id':i,'date':response.forecast.forecastday[i].date,'weather':response.forecast.forecastday[i].day.condition.text,'tempMax':response.forecast.forecastday[i].day.maxtemp_c,'tempMin':response.forecast.forecastday[i].day.mintemp_c,'pressure':\"-\",'wind':\"-\",'image':weatherIcons[response.forecast.forecastday[i].day.condition.code],'clouds':\"-\",'humidity':response.forecast.forecastday[i].day.avghumidity}])});}_this.setState({Property:_this.state.ForecastDailyElements[1]});}).catch(function(err){console.log(err);_this.setState(function(prevState){return{error:true,city:prevState.city};});});};_this.getWeatherTommorowIo=function(lat,lon){_this.setState({ForecastDailyElements:[]});fetch(\"https://api.tomorrow.io/v4/timelines?location=\".concat(lat,\",\").concat(lon,\"&fields=temperature,humidity,windSpeed,cloudCover,weatherCode,pressureSurfaceLevel&timesteps=1d&units=metric&apikey=Xsa59kYGGrHiXs1TZ3cItU7zRZ4FfGQ8\")).then(function(response){if(response.ok){return response;}else{_this.setState({compareCurrentElements:[].concat(_toConsumableArray(_this.state.compareCurrentElements),[{'id':3,'source':\"API TommorowIo jest aktualnie niedostępne\"}])});throw Error(\"Błąd pobierania danych z API\");}}).then(function(response){return response.json();}).then(function(response){console.log(response);_this.setState({compareCurrentElements:[].concat(_toConsumableArray(_this.state.compareCurrentElements),[{'id':3,'date':response.data.timelines[0].startTime,'weather':weatherConditions[response.data.timelines[0].intervals[0].values.weatherCode],'temp':response.data.timelines[0].intervals[0].values.temperature,'pressure':response.data.timelines[0].intervals[0].values.pressureSurfaceLevel,'wind':CalWindSpeed(response.data.timelines[0].intervals[0].values.windSpeed),'image':weatherIcons[response.data.timelines[0].intervals[0].values.weatherCode],'source':\"TommorowIo\"}])});}).catch(function(err){console.log(err);_this.setState(function(prevState){return{error:true,city:prevState.city};});});};_this.getForecastDailyTI=function(lat,lon){_this.setState({ForecastDailyElements:[]});fetch(\"https://api.tomorrow.io/v4/timelines?location=\".concat(lat,\",\").concat(lon,\"&fields=temperature,humidity,windSpeed,cloudCover,weatherCode,pressureSurfaceLevel&timesteps=1d&units=metric&apikey=Xsa59kYGGrHiXs1TZ3cItU7zRZ4FfGQ8\")).then(function(response){if(response.ok){return response;}throw Error(\"Błąd pobierania danych z API\");}).then(function(response){return response.json();}).then(function(response){console.log(response);for(var i=0;i<8;i++){_this.setState({ForecastDailyElements:[].concat(_toConsumableArray(_this.state.ForecastDailyElements),[{'id':i,'date':response.data.timelines[0].intervals[i].startTime,'weather':weatherConditions[response.data.timelines[0].intervals[i].values.weatherCode],'tempMax':response.data.timelines[0].intervals[i].values.temperature,'tempMin':response.data.timelines[0].intervals[i].values.temperature,'pressure':response.data.timelines[0].intervals[i].values.pressureSurfaceLevel,'wind':response.data.timelines[0].intervals[i].values.windSpeed,'image':weatherIcons[response.data.timelines[0].intervals[i].values.weatherCode],'clouds':response.data.timelines[0].intervals[i].values.cloudCover,'humidity':response.data.timelines[0].intervals[i].values.humidity}])});}_this.setState({Property:_this.state.ForecastDailyElements[1]});}).catch(function(err){console.log(err);_this.setState(function(prevState){return{error:true,city:prevState.city};});});};_this.getWeatherVisualcrossing=function(city){_this.setState({ForecastDailyElements:[]});fetch(\"https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/forecast?aggregateHours=24&combinationMethod=aggregate&contentType=json&unitGroup=metric&locationMode=single&iconSet=icons2&key=LHKNDUGQ4MSQTL5749JVGX4XV&dataElements=default&locations=\".concat(city)).then(function(response){if(response.ok){return response;}throw Error(\"Błąd pobierania danych z API\");}).then(function(response){return response.json();}).then(function(response){console.log(response);_this.setState({compareCurrentElements:[].concat(_toConsumableArray(_this.state.compareCurrentElements),[{'id':4,'date':response.location.currentConditions.datetime,'weather':response.location.currentConditions.icon,'temp':response.location.currentConditions.temp,'pressure':response.location.currentConditions.sealevelpressure,'wind':response.location.currentConditions.wspd,'image':weatherIcons[0],'source':\"VisualCrossing\"}])});}).catch(function(err){console.log(err);_this.setState(function(prevState){return{error:true,city:prevState.city};});});};_this.getForecastDailyVC=function(city){_this.setState({ForecastDailyElements:[]});fetch(\"https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/forecast?aggregateHours=24&combinationMethod=aggregate&contentType=json&unitGroup=metric&locationMode=single&iconSet=icons2&key=LHKNDUGQ4MSQTL5749JVGX4XV&dataElements=default&locations=\".concat(city)).then(function(response){if(response.ok){return response;}throw Error(\"Błąd pobierania danych z API\");}).then(function(response){return response.json();}).then(function(response){console.log(response);for(var i=0;i<8;i++){_this.setState({ForecastDailyElements:[].concat(_toConsumableArray(_this.state.ForecastDailyElements),[{'id':i,'date':response.location.values[i].datetime,'weather':response.location.values[i].conditions,'tempMax':response.location.values[i].maxt,'tempMin':response.location.values[i].mint,'pressure':\"-\",'wind':1.6*response.location.values[i].wspd,'image':\"-\",'clouds':response.location.values[i].cloudcover,'humidity':response.location.values[i].humidity}])});}_this.setState({Property:_this.state.ForecastDailyElements[1]});}).catch(function(err){console.log(err);_this.setState(function(prevState){return{error:true,city:prevState.city};});});};_this.getWeatherWeatherbit=function(city){_this.setState({ForecastDailyElements:[]});fetch(\" https://api.weatherbit.io/v2.0/forecast/daily?city=\".concat(city,\"&lang=pl&key=\").concat(API_key_w)).then(function(response){if(response.ok){return response;}throw Error(\"Błąd pobierania danych z API\");}).then(function(response){return response.json();}).then(function(response){console.log(response);_this.setState({compareCurrentElements:[].concat(_toConsumableArray(_this.state.compareCurrentElements),[{'id':5,'date':response.data[0].ob_time,'weather':response.data[0].weather.description,'temp':response.data[0].temp,'pressure':Math.floor(response.data[0].pres),'wind':Math.floor(1.609*response.data[0].wind_spd),'image':weatherIcons[response.data[0].weather.code],'source':\"Weatherbit\"}])});}).catch(function(err){console.log(err);_this.setState(function(prevState){return{error:true,city:prevState.city};});});};_this.getForecastDailyWB=function(city){_this.setState({ForecastDailyElements:[]});fetch(\" https://api.weatherbit.io/v2.0/forecast/daily?city=\".concat(city,\"&lang=pl&key=\").concat(API_key_w)).then(function(response){if(response.ok){return response;}throw Error(\"Błąd pobierania danych z API\");}).then(function(response){return response.json();}).then(function(response){console.log(response);for(var i=0;i<8;i++){_this.setState({ForecastDailyElements:[].concat(_toConsumableArray(_this.state.ForecastDailyElements),[{'id':i,'date':response.data[i].datetime,'weather':response.data[i].weather.description,'tempMax':response.data[i].max_temp,'tempMin':response.data[i].min_temp,'pressure':response.data[i].pres,'wind':Math.floor(1.609*response.data[i].wind_spd),'image':weatherIcons[response.data[i].weather.code],'clouds':response.data[i].clouds,'humidity':\"-\"}])});}_this.setState({Property:_this.state.ForecastDailyElements[1]});}).catch(function(err){console.log(err);_this.setState(function(prevState){return{error:true,city:prevState.city};});});};_this.inputHandler=function(e){_this.setState({value:e.target.value});};_this.state=(_this$state={value:\"\",compareCurrentElements:[],ForecastDailyElements:[]},_defineProperty(_this$state,\"ForecastDailyElements\",[]),_defineProperty(_this$state,\"source\",\"OpenWeatherMap\"),_defineProperty(_this$state,\"city\",undefined),_defineProperty(_this$state,\"lat\",undefined),_defineProperty(_this$state,\"lon\",undefined),_defineProperty(_this$state,\"currentProperty\",undefined),_defineProperty(_this$state,\"Property\",undefined),_defineProperty(_this$state,\"Property\",undefined),_defineProperty(_this$state,\"weatherComp\",undefined),_defineProperty(_this$state,\"tempComp\",undefined),_defineProperty(_this$state,\"pressureComp\",undefined),_defineProperty(_this$state,\"windComp\",undefined),_defineProperty(_this$state,\"content\",undefined),_defineProperty(_this$state,\"error\",false),_defineProperty(_this$state,\"errorOWM\",false),_defineProperty(_this$state,\"errorCity\",false),_this$state);return _this;}_createClass(Compare,[{key:\"componentDidMount\",value:function componentDidMount(){this.getDefaultCompare(\"Warszawa\");}},{key:\"render\",value:function render(){var _this2=this;if(this.state.errorOWM){this.state.content=/*#__PURE__*/_jsx(\"h1\",{children:\"US\\u0141UGA JEST AKTUALNIE NIEDOST\\u0118PNA - ERROR API\"});}if(this.state.errorCity){this.state.content=/*#__PURE__*/_jsxs(\"h1\",{children:[\"Brak danych dla podanego maista - \",this.state.city,\" nie istnieje lub zosta\\u0142o b\\u0142\\u0119dnie wpisane!\"]});}if(!this.state.errorOWM&&!this.state.errorCity){this.state.content=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"compare-main-cards\",children:this.state.currentProperty?/*#__PURE__*/_jsx(\"div\",{className:\"compare-main-cards-slider\",children:/*#__PURE__*/_jsx(\"div\",{className:\"compare-main-cards-slider-wrapper\",style:{'transform':\"translateX(-\".concat(this.state.currentProperty.id*(100/this.state.compareCurrentElements.length),\"%)\")},children:this.state.compareCurrentElements.map(function(fde){return/*#__PURE__*/_jsx(CompareCurrentWeatherItem,{compare:_this2.state,element:fde},fde.id);})})}):null}),/*#__PURE__*/_jsxs(\"div\",{className:\"compare-forecast-main\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.setSource(\"OpenWeatherMap\");},children:\"OpenWeatherMap\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.setSource(\"WeatherApi\");},children:\"WeatherApi\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.setSource(\"TommorowIO\");},children:\"TommorowIO\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.setSource(\"VisualCrossing\");},children:\"VisualCrossing\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.setSource(\"Weatherbit\");},children:\"Weatherbit\"}),this.state.Property?/*#__PURE__*/_jsxs(\"div\",{className:\"compare-forecast-cards\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"left\",style:{backgroundImage:\"url(\\\"/images/arrow_left.png\\\")\"},onClick:function onClick(){return _this2.prevProperty(_this2.state.Property,_this2.state.ForecastDailyElements);},disabled:this.state.Property.id===0}),/*#__PURE__*/_jsx(\"button\",{className:\"right\",style:{backgroundImage:\"url(\\\"/images/arrow_right.png\\\")\"},onClick:function onClick(){return _this2.nextProperty(_this2.state.Property,_this2.state.ForecastDailyElements);},disabled:this.state.Property.id===this.state.ForecastDailyElements.length-3}),/*#__PURE__*/_jsx(\"div\",{className:\"compare-forecast-cards\",children:/*#__PURE__*/_jsx(\"div\",{className:\"compare-forecast-cards-slider\",children:/*#__PURE__*/_jsx(\"div\",{className:\"compare-forecast-cards-slider-wrapper\",style:{'transform':\"translateX(-\".concat(this.state.Property.id*(100/this.state.ForecastDailyElements.length),\"%)\")},children:this.state.ForecastDailyElements.map(function(fde){return/*#__PURE__*/_jsx(CompareForecastItem,{element:fde},fde.id);})})})})]}):null]})]});}return/*#__PURE__*/_jsxs(\"div\",{style:{backgroundImage:\"url(\\\"/images/bg_comp.jpg\\\")\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"city-form\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Wyszukaj miasto dla kt\\xF3rego chcesz por\\xF3wna\\u0107 obecne warunki pogodowe oraz prognozy pogody\"}),/*#__PURE__*/_jsx(Form,{value:this.state.value,handler:this.inputHandler,submit:this.getWeatherCompare})]}),this.state.content]});}}]);return Compare;}(React.Component);;var weatherIcons={200:'/images/200.png',201:'/images/201.png',202:'/images/202.png',210:'/images/210.png',211:'/images/211.png',212:'/images/212.png',221:'/images/212.png',230:'/images/230D.png',231:'/images/231.png',232:'/images/232.png',300:'/images/300D.png',301:'/images/301.png',302:'/images/302.png',310:'/images/310D.png',311:'/images/311.png',312:'/images/312.png',313:'/images/313_1.png',314:'/images/314.png',321:'/images/321.png',500:'/images/500D.png',501:'/images/501.png',502:'/images/502.png',503:'/images/503.png',504:'/images/504.png',511:'/images/511.png',520:'/images/520D.png',521:'/images/521_2.png',522:'/images/522_1.png',531:'/images/522_1.png',600:'/images/600D.png',601:'/images/601.png',602:'/images/602.png',611:'/images/611.png',612:'/images/612D.png',613:'/images/613.png',615:'/images/615D.png',616:'/images/616.png',620:'/images/620D.png',621:'/images/621.png',622:'/images/622.png',701:'/images/701_2.png',711:'/images/701_2.png',721:'/images/701_2.png',731:'/images/701_2.png',741:'/images/701_2.png',751:'/images/701_2.png',761:'/images/701_2.png',762:'/images/701_2.png',771:'/images/701_2.png',781:'/images/701_2.png',800:'/images/800D.png',801:'/images/801D.png',802:'/images/802D.png',803:'/images/803D.png',804:'/images/804.png',1000:'/images/800D.png',1003:'/images/801D.png',1006:'/images/802D.png',1009:'/images/804.png',1030:'/images/701_2.png',1063:'/images/500D.png',1066:'/images/600.png',1069:'/images/613.png',1072:'/images/511.png',1087:'/images/200.png',1114:'/images/602.png',1117:'/images/622.png',1135:'/images/702_1.png',1147:'/images/702_1.png',1150:'/images/300D.png',1153:'/images/301.png',1168:'/images/511.png',1171:'/images/501.png',1180:'/images/502.png',1183:'/images/500D.png',1186:'/images/500D.png',1189:'/images/501.png',1192:'/images/502.png',1195:'/images/503.png',1198:'/images/511.png',1201:'/images/511.png',1204:'/images/611.png',1207:'/images/612D.png',1210:'/images/600D.png',1213:'/images/600D.png',1216:'/images/601.png',1219:'/images/601.png',1222:'/images/602.png',1225:'/images/602.png',1237:'/images/511.png',1240:'/images/520.png',1243:'/images/521_2.png',1246:'/images/522_1.png',1249:'/images/612D.png',1252:'/images/613.png',1255:'/images/612D.png',1258:'/images/613.png',1261:'/images/511.png',1264:'/images/511.png',1273:'/images/200.png',1276:'/images/201.png',1279:'/images/602.png',1282:'/images/602.png',4201:'/images/502.png',4001:'/images/501.png',4200:'/images/500D.png',6201:'/images/511.png',6001:'/images/511.png',6200:'/images/511.png',6000:'/images/511.png',4000:'/images/301.png',7101:'/images/511.png',7000:'/images/511.png',7102:'/images/511.png',5101:'/images/602.png',5000:'/images/601.png',5100:'/images/600D.png',5001:'/images/601.png',8000:'/images/201.png',2100:'/images/701_2.png',2000:'/images/701_2.png',1001:'/images/804.png',1102:'/images/803D.png',1101:'/images/802D.png',1100:'/images/801D.png'};var weatherConditions={4201:'Duży deszcz',4001:'Deszcz',4200:'Lekki Deszcz',6201:'Duży Marznący Deszcz',6001:'Marznący Deszcz',6200:'Lekki Marznący Deszcz',6000:'Marznąca Mrzawka',4000:'Mrzawka',7101:'Duże Krupy',7000:'Krupy',7102:'Lekkie Krupy',5101:'Duży Śnieg',5000:'Śnieg',5100:'Lekki Śnieg',5001:'Zamieć',8000:'Burza',2100:'Lekka Mgła',2000:'Mgła',1001:'Pochmurnie',1102:'Przewaga Chmur',1101:'Częściowe Zachmurzenie',1100:'Przeważnie Słonecznie',1000:'Słonecznie'};export default Compare;","map":{"version":3,"sources":["C:/Users/vened/Desktop/Weather/my_weather/client/src/components/Compare/Compare.js"],"names":["React","Form","CalDate","CalCelsius","CalWindSpeed","CompareCurrentWeatherItem","CompareForecastItem","API_key_OWM","API_key_WA","API_key_w","Compare","props","nextProperty","Property","Elements","newIndex","id","setState","console","log","prevProperty","setSource","source","getForecastDailyOWM","state","lat","lon","getForecastDailyWA","city","getForecastDailyTI","getForecastDailyVC","getForecastDailyWB","getDefaultCompare","compareCurrentElements","fetch","then","response","ok","Error","json","coord","getWeatherWeatherApi","getWeatherTommorowIo","getWeatherVisualcrossing","getWeatherWeatherbit","timezone","dt","weather","description","main","temp","pressure","wind","speed","weatherIcons","name","weatherComp","tempComp","pressureComp","windComp","currentProperty","responseAirQuality","catch","err","prevState","error","errorOWM","getWeatherCompare","e","preventDefault","result","value","errorCity","ForecastDailyElements","i","daily","max","min","wind_speed","clouds","humidity","current","last_updated","condition","text","temp_c","pressure_mb","wind_kph","code","forecast","forecastday","date","day","maxtemp_c","mintemp_c","avghumidity","data","timelines","startTime","weatherConditions","intervals","values","weatherCode","temperature","pressureSurfaceLevel","windSpeed","cloudCover","location","currentConditions","datetime","icon","sealevelpressure","wspd","conditions","maxt","mint","cloudcover","ob_time","Math","floor","pres","wind_spd","max_temp","min_temp","inputHandler","target","undefined","content","length","map","fde","backgroundImage","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Form from '../Form/Form'\r\nimport CalDate from '../Functions/CalDate';\r\nimport CalCelsius from '../Functions/CalCelsius';\r\nimport CalWindSpeed from '../Functions/CalWindSpeed';\r\nimport CompareCurrentWeatherItem from './CompareCurrentWeatherItem';\r\nimport CompareForecastItem from './CompareForecastItem';\r\n\r\nimport './Compare.css';\r\n\r\nconst API_key_OWM=\"157d33f8987d245bc6a1997408e90015\";\r\nconst API_key_WA = \"d42d0d989ead4316b9d143558213105\";\r\nconst API_key_w = \"4c7c27f8abf34ae09c61bad9a897be7e\";\r\n\r\nclass Compare extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state=\r\n        {\r\n            value:\"\",\r\n            compareCurrentElements:[\r\n            ],\r\n            ForecastDailyElements:[\r\n            ],\r\n            ForecastDailyElements:[\r\n            ],\r\n            source:\"OpenWeatherMap\",\r\n            city:undefined,\r\n            lat:undefined,\r\n            lon:undefined,\r\n            currentProperty:undefined,\r\n            Property:undefined,\r\n            Property:undefined,\r\n            weatherComp:undefined,\r\n            tempComp:undefined,\r\n            pressureComp:undefined,\r\n            windComp:undefined,\r\n            content:undefined,\r\n            error:false,\r\n            errorOWM:false,\r\n            errorCity:false\r\n        };\r\n    };\r\n\r\n    nextProperty = (Property,Elements) => \r\n    {\r\n        const newIndex = Property.id +1;\r\n\r\n        this.setState(\r\n        {\r\n            Property: Elements[newIndex]\r\n        });\r\n\r\n        console.log(newIndex);\r\n    };\r\n\r\n    prevProperty= (Property,Elements) => \r\n    {\r\n        const newIndex = Property.id -1;\r\n\r\n        this.setState(\r\n        {\r\n            Property: Elements[newIndex]\r\n        });\r\n    };\r\n    setSource = (source) => \r\n    {\r\n        this.setState(\r\n        {\r\n                source:source\r\n        });\r\n\r\n        if(source===\"OpenWeatherMap\")\r\n        {\r\n            this.getForecastDailyOWM(this.state.lat,this.state.lon);\r\n        }\r\n\r\n        if(source===\"WeatherApi\")\r\n        {\r\n            this.getForecastDailyWA(this.state.city);\r\n        }\r\n\r\n        if(source===\"TommorowIO\")\r\n        {\r\n            this.getForecastDailyTI(this.state.lat,this.state.lon);\r\n        }\r\n\r\n        if(source===\"VisualCrossing\")\r\n        {\r\n            this.getForecastDailyVC(this.state.city);\r\n        }\r\n\r\n        if(source===\"Weatherbit\")\r\n        {\r\n            this.getForecastDailyWB(this.state.city);\r\n        }\r\n    };\r\n\r\n    getDefaultCompare = (city) =>\r\n    {\r\n        console.log(city)\r\n        \r\n        this.setState(\r\n        {\r\n            compareCurrentElements:[]\r\n        });\r\n        \r\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&lang=pl&APPID=${API_key_OWM}`)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.getForecastDailyOWM(response.coord.lat,response.coord.lon)\r\n            this.getWeatherWeatherApi(city)\r\n            this.getWeatherTommorowIo(response.coord.lat,response.coord.lon)\r\n            this.getWeatherVisualcrossing(city)\r\n            this.getWeatherWeatherbit(city)\r\n            this.setState({\r\n                timezone:response.timezone,\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':1,\r\n                    'date':CalDate(response.dt,response.timezone),\r\n                    'weather':response.weather[0].description,\r\n                    'temp':CalCelsius(response.main.temp),\r\n                    'pressure':response.main.pressure,\r\n                    'wind':CalWindSpeed(response.wind.speed),\r\n                    'image':weatherIcons[response.weather[0].id],\r\n                    'source':\"OpenWeatherMap\"\r\n                }],\r\n                city:response.name,\r\n                lat:response.coord.lat,\r\n                lon:response.coord.lon,\r\n                weatherComp:response.weather[0].description,\r\n                tempComp:CalCelsius(response.main.temp),\r\n                pressureComp:response.main.pressure,\r\n                windComp:CalWindSpeed(response.wind.speed),\r\n            });\r\n            this.setState(\r\n            {\r\n                currentProperty:this.state.compareCurrentElements[0]\r\n            }); \r\n\r\n            return fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&lang=pl&APPID=${API_key_OWM}`);\r\n        })\r\n        .then(responseAirQuality => responseAirQuality.json()) \r\n        .catch(err =>{\r\n            console.log(err);\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                errorOWM:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n    getWeatherCompare = (e) =>\r\n    {\r\n        e.preventDefault()\r\n        \r\n        this.setState(\r\n        {\r\n            compareCurrentElements:[]\r\n        });\r\n        \r\n        const result = fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key_OWM}`)\r\n        .then(response => {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }else{\r\n                this.setState(state =>(\r\n                    {\r\n                    city:state.value,\r\n                    }))\r\n            throw Error(\"Błąd pobierania danych z API\")\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            this.getForecastDailyOWM(response.coord.lat,response.coord.lon)\r\n            this.getWeatherWeatherApi(this.state.value)\r\n            this.getWeatherTommorowIo(response.coord.lat,response.coord.lon)\r\n            this.getWeatherVisualcrossing(this.state.value)\r\n            this.getWeatherWeatherbit(this.state.value)\r\n            this.setState({\r\n                timezone:response.timezone,\r\n                errorCity:false,\r\n                compareCurrentElements:[...this.state.compareCurrentElements,{\r\n                    'id':1,\r\n                    'date':CalDate(response.dt),\r\n                    'weather':response.weather[0].description,\r\n                    'temp':CalCelsius(response.main.temp),\r\n                    'pressure':response.main.pressure,\r\n                    'wind':CalWindSpeed(response.wind.speed),\r\n                    'image':weatherIcons[response.weather[0].id],\r\n                    'source':\"OpenWeatherMap\"\r\n                }],\r\n                city:response.name,\r\n                lat:response.coord.lat,\r\n                lon:response.coord.lon,\r\n                weatherComp:response.weather[0].description,\r\n                tempComp:CalCelsius(response.main.temp),\r\n                pressureComp:response.main.pressure,\r\n                windComp:CalWindSpeed(response.wind.speed),\r\n            });\r\n            this.setState(\r\n            {\r\n                currentProperty:this.state.compareCurrentElements[0]\r\n            }); \r\n\r\n            return fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&lang=pl&APPID=${API_key_OWM}`);\r\n        })\r\n        .then(responseAirQuality => responseAirQuality.json()) \r\n        .catch(err =>{\r\n            console.log(err);\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                errorCity:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getForecastDailyOWM = (lat,lon)=>\r\n    {\r\n        console.log(lat);\r\n\r\n        this.setState({\r\n            ForecastDailyElements:[]\r\n        });\r\n        \r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=pl&appid=${API_key_OWM}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n              throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            for (var i = 0; i < 8; i++) \r\n            {\r\n                this.setState(\r\n                {\r\n                    ForecastDailyElements:[...this.state.ForecastDailyElements,\r\n                    {\r\n                        'id':i,\r\n                        'date':CalDate(response.daily[i].dt,this.state.timezone),\r\n                        'weather':response.daily[i].weather[0].description,\r\n                        'tempMax':CalCelsius(response.daily[i].temp.max),\r\n                        'tempMin':CalCelsius(response.daily[i].temp.min),\r\n                        'pressure':response.daily[i].pressure,\r\n                        'wind':CalWindSpeed(response.daily[i].wind_speed),\r\n                        'image':weatherIcons[response.daily[i].weather[0].id],\r\n                        'clouds':response.daily[i].clouds,\r\n                        'humidity':response.daily[i].humidity,\r\n                    }],  \r\n                });\r\n            };  \r\n            this.setState(\r\n            {\r\n                Property:this.state.ForecastDailyElements[1]\r\n            });\r\n        });\r\n    };\r\n    getWeatherWeatherApi = (city) =>\r\n    {\r\n            \r\n        fetch(`http://api.weatherapi.com/v1/current.json?key=${API_key_WA}&q=${city}&days=7&aqi=yes&alerts=yes&lang=pl`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response =>\r\n        {\r\n            console.log(response);\r\n            this.setState(\r\n            {\r\n                compareCurrentElements:[...this.state.compareCurrentElements,\r\n                {\r\n                    'id':2,\r\n                    'date':response.current.last_updated,\r\n                    'weather':response.current.condition.text,\r\n                    'temp':response.current.temp_c,\r\n                    'pressure':response.current.pressure_mb,\r\n                    'wind':response.current.wind_kph,\r\n                    'image':weatherIcons[response.current.condition.code],\r\n                    'source':\"WeatherApi\"\r\n                }],\r\n            });\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err);\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getForecastDailyWA = (city) =>\r\n    {\r\n        this.setState(\r\n        {\r\n            ForecastDailyElements:[]\r\n        });\r\n            \r\n        fetch(`http://api.weatherapi.com/v1/forecast.json?key=${API_key_WA}&q=${city}&days=4&aqi=yes&alerts=yes&lang=pl`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            for (var i = 0; i < 3; i++) \r\n            {\r\n                this.setState(\r\n                {\r\n                    ForecastDailyElements:[...this.state.ForecastDailyElements,\r\n                    {\r\n                        'id':i,\r\n                        'date':response.forecast.forecastday[i].date,\r\n                        'weather':response.forecast.forecastday[i].day.condition.text,\r\n                        'tempMax':response.forecast.forecastday[i].day.maxtemp_c,\r\n                        'tempMin':response.forecast.forecastday[i].day.mintemp_c,\r\n                        'pressure':\"-\",\r\n                        'wind':\"-\",\r\n                        'image':weatherIcons[response.forecast.forecastday[i].day.condition.code],\r\n                        'clouds':\"-\",\r\n                        'humidity':response.forecast.forecastday[i].day.avghumidity,\r\n                    }],\r\n                });\r\n            }\r\n            this.setState(\r\n            {\r\n                Property:this.state.ForecastDailyElements[1]\r\n            }) \r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err)\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getWeatherTommorowIo = (lat,lon) =>\r\n    {\r\n        \r\n        this.setState(\r\n        {\r\n            ForecastDailyElements:[]\r\n        });\r\n            \r\n        fetch(`https://api.tomorrow.io/v4/timelines?location=${lat},${lon}&fields=temperature,humidity,windSpeed,cloudCover,weatherCode,pressureSurfaceLevel&timesteps=1d&units=metric&apikey=Xsa59kYGGrHiXs1TZ3cItU7zRZ4FfGQ8`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }else{\r\n\r\n                this.setState(\r\n                    {\r\n                        compareCurrentElements:[...this.state.compareCurrentElements,\r\n                        {\r\n                            'id':3,\r\n                            'source':\"API TommorowIo jest aktualnie niedostępne\"\r\n                        }],\r\n                    });\r\n                throw Error(\"Błąd pobierania danych z API\");\r\n            }\r\n            \r\n\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            this.setState(\r\n            {\r\n                compareCurrentElements:[...this.state.compareCurrentElements,\r\n                {\r\n                    'id':3,\r\n                    'date':response.data.timelines[0].startTime,\r\n                    'weather':weatherConditions[response.data.timelines[0].intervals[0].values.weatherCode],\r\n                    'temp':response.data.timelines[0].intervals[0].values.temperature,\r\n                    'pressure':response.data.timelines[0].intervals[0].values.pressureSurfaceLevel,\r\n                    'wind':CalWindSpeed(response.data.timelines[0].intervals[0].values.windSpeed),\r\n                    'image':weatherIcons[response.data.timelines[0].intervals[0].values.weatherCode],\r\n                    'source':\"TommorowIo\"\r\n                }],\r\n            });\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err)\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getForecastDailyTI = (lat,lon) =>\r\n    {\r\n        this.setState(\r\n        {\r\n            ForecastDailyElements:[]\r\n        });\r\n            \r\n        fetch(`https://api.tomorrow.io/v4/timelines?location=${lat},${lon}&fields=temperature,humidity,windSpeed,cloudCover,weatherCode,pressureSurfaceLevel&timesteps=1d&units=metric&apikey=Xsa59kYGGrHiXs1TZ3cItU7zRZ4FfGQ8`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            for (var i = 0; i < 8; i++) \r\n            {\r\n                this.setState(\r\n                    {\r\n                    ForecastDailyElements:[...this.state.ForecastDailyElements,\r\n                    {\r\n                        'id':i,\r\n                        'date':response.data.timelines[0].intervals[i].startTime,\r\n                        'weather':weatherConditions[response.data.timelines[0].intervals[i].values.weatherCode],\r\n                        'tempMax':response.data.timelines[0].intervals[i].values.temperature,\r\n                        'tempMin':response.data.timelines[0].intervals[i].values.temperature,\r\n                        'pressure':response.data.timelines[0].intervals[i].values.pressureSurfaceLevel,\r\n                        'wind':response.data.timelines[0].intervals[i].values.windSpeed,\r\n                        'image':weatherIcons[response.data.timelines[0].intervals[i].values.weatherCode],\r\n                        'clouds':response.data.timelines[0].intervals[i].values.cloudCover,\r\n                        'humidity':response.data.timelines[0].intervals[i].values.humidity,\r\n                    }],  \r\n                });\r\n            }  \r\n            this.setState(\r\n            {\r\n                Property:this.state.ForecastDailyElements[1]\r\n            }); \r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err);\r\n            this.setState(prevState =>{\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getWeatherVisualcrossing = (city) =>\r\n    {\r\n\r\n        this.setState(\r\n            {\r\n            ForecastDailyElements:[]\r\n        });\r\n            \r\n        fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/forecast?aggregateHours=24&combinationMethod=aggregate&contentType=json&unitGroup=metric&locationMode=single&iconSet=icons2&key=LHKNDUGQ4MSQTL5749JVGX4XV&dataElements=default&locations=${city}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            this.setState(\r\n            {\r\n                compareCurrentElements:[...this.state.compareCurrentElements,\r\n                {\r\n                    'id':4,\r\n                    'date':response.location.currentConditions.datetime,\r\n                    'weather':response.location.currentConditions.icon,\r\n                    'temp':response.location.currentConditions.temp,\r\n                    'pressure':response.location.currentConditions.sealevelpressure,\r\n                    'wind':response.location.currentConditions.wspd,\r\n                    'image':weatherIcons[0],\r\n                    'source':\"VisualCrossing\"\r\n                }],\r\n            });\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err)\r\n            this.setState(prevState =>{\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getForecastDailyVC = (city) =>\r\n    {\r\n        this.setState(\r\n        {\r\n            ForecastDailyElements:[]\r\n        });\r\n            \r\n        fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/weatherdata/forecast?aggregateHours=24&combinationMethod=aggregate&contentType=json&unitGroup=metric&locationMode=single&iconSet=icons2&key=LHKNDUGQ4MSQTL5749JVGX4XV&dataElements=default&locations=${city}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            for (var i = 0; i < 8; i++) \r\n            {\r\n                this.setState(\r\n                {\r\n                    ForecastDailyElements:[...this.state.ForecastDailyElements,\r\n                    {\r\n                        'id':i,\r\n                        'date':response.location.values[i].datetime,\r\n                        'weather':response.location.values[i].conditions,\r\n                        'tempMax':response.location.values[i].maxt,\r\n                        'tempMin':response.location.values[i].mint,\r\n                        'pressure':\"-\",\r\n                        'wind':1.6*response.location.values[i].wspd,\r\n                        'image':\"-\",\r\n                        'clouds':response.location.values[i].cloudcover,\r\n                        'humidity':response.location.values[i].humidity,\r\n                    }],  \r\n                });\r\n            }  \r\n            this.setState(\r\n            {\r\n                Property:this.state.ForecastDailyElements[1]\r\n            });\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err)\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            })\r\n        });\r\n    };\r\n\r\n    getWeatherWeatherbit = (city) =>\r\n    {\r\n        this.setState(\r\n        {\r\n            ForecastDailyElements:[]\r\n        });\r\n            \r\n        fetch(` https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&lang=pl&key=${API_key_w}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            this.setState(\r\n            {\r\n                compareCurrentElements:[...this.state.compareCurrentElements,\r\n                {\r\n                    'id':5,\r\n                    'date':response.data[0].ob_time,\r\n                    'weather':response.data[0].weather.description,\r\n                    'temp':response.data[0].temp,\r\n                    'pressure':Math.floor(response.data[0].pres),\r\n                    'wind':Math.floor(1.609*response.data[0].wind_spd),\r\n                    'image':weatherIcons[response.data[0].weather.code],\r\n                    'source':\"Weatherbit\"\r\n                }],\r\n            });\r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err);\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    getForecastDailyWB = (city) =>\r\n    {\r\n\r\n        this.setState({\r\n            ForecastDailyElements:[]\r\n        });\r\n            \r\n        fetch(` https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&lang=pl&key=${API_key_w}`)\r\n        .then(response => \r\n        {\r\n            if(response.ok)\r\n            {\r\n                return response;\r\n            }\r\n            throw Error(\"Błąd pobierania danych z API\");\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => \r\n        {\r\n            console.log(response);\r\n            for (var i = 0; i < 8; i++) \r\n            {\r\n                this.setState(\r\n                {\r\n                    ForecastDailyElements:[...this.state.ForecastDailyElements,\r\n                    {\r\n                        'id':i,\r\n                        'date':response.data[i].datetime,\r\n                        'weather':response.data[i].weather.description,\r\n                        'tempMax':response.data[i].max_temp,\r\n                        'tempMin':response.data[i].min_temp,\r\n                        'pressure':response.data[i].pres,\r\n                        'wind':Math.floor(1.609*response.data[i].wind_spd),\r\n                        'image':weatherIcons[response.data[i].weather.code],\r\n                        'clouds':response.data[i].clouds,\r\n                        'humidity':\"-\",\r\n                    }],  \r\n                });\r\n            }  \r\n            this.setState(\r\n            {\r\n                Property:this.state.ForecastDailyElements[1]\r\n            }); \r\n        })\r\n        .catch(err =>\r\n        {\r\n            console.log(err);\r\n            this.setState(prevState =>\r\n            {\r\n                return{\r\n                error:true,\r\n                city:prevState.city\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    inputHandler=(e)=>\r\n    {\r\n        this.setState(\r\n        {\r\n            value:e.target.value\r\n        });\r\n    };\r\n    componentDidMount()\r\n    {\r\n        this.getDefaultCompare(\"Warszawa\");\r\n    }\r\n    render(){\r\n        \r\n        if(this.state.errorOWM)\r\n        {\r\n            this.state.content = (\r\n                <h1>USŁUGA JEST AKTUALNIE NIEDOSTĘPNA - ERROR API</h1>\r\n            )\r\n        }if(this.state.errorCity){\r\n            this.state.content = (\r\n                <h1>Brak danych dla podanego maista - {this.state.city} nie istnieje lub zostało błędnie wpisane!</h1>\r\n            )\r\n        }if(!this.state.errorOWM&&!this.state.errorCity){\r\n\r\n            this.state.content = (\r\n                <><div className=\"compare-main-cards\">\r\n                    {this.state.currentProperty ? (\r\n                        <div className=\"compare-main-cards-slider\">\r\n                            <div className=\"compare-main-cards-slider-wrapper\" style={{\r\n                                'transform': `translateX(-${this.state.currentProperty.id * (100 / this.state.compareCurrentElements.length)}%)`\r\n                            }}>\r\n                                {this.state.compareCurrentElements.map(fde => <CompareCurrentWeatherItem compare={this.state} key={fde.id} element={fde} />)}\r\n                            </div>\r\n\r\n                        </div>\r\n                    ) : null}\r\n                </div><div className=\"compare-forecast-main\">\r\n                        <button\r\n                            onClick={() => this.setSource(\"OpenWeatherMap\")}\r\n                        >\r\n                            OpenWeatherMap\r\n                        </button>\r\n                        <button\r\n                            onClick={() => this.setSource(\"WeatherApi\")}\r\n                        >\r\n                            WeatherApi\r\n                        </button>\r\n                        <button\r\n                            onClick={() => this.setSource(\"TommorowIO\")}\r\n                        >\r\n                            TommorowIO\r\n                        </button>\r\n                        <button\r\n                            onClick={() => this.setSource(\"VisualCrossing\")}\r\n                        >\r\n                            VisualCrossing\r\n                        </button>\r\n                        <button\r\n                            onClick={() => this.setSource(\"Weatherbit\")}\r\n                        >\r\n                            Weatherbit\r\n                        </button>\r\n                        {this.state.Property ? (\r\n                            <div className=\"compare-forecast-cards\">\r\n                                <button className=\"left\" style={{\r\n                                    backgroundImage: `url(\"/images/arrow_left.png\")`\r\n                                }}\r\n                                    onClick={() => this.prevProperty(this.state.Property, this.state.ForecastDailyElements)}\r\n                                    disabled={this.state.Property.id === 0}\r\n                                >\r\n                                </button>\r\n                                <button className=\"right\" style={{\r\n                                    backgroundImage: `url(\"/images/arrow_right.png\")`\r\n                                }}\r\n                                    onClick={() => this.nextProperty(this.state.Property, this.state.ForecastDailyElements)}\r\n                                    disabled={this.state.Property.id === this.state.ForecastDailyElements.length - 3}\r\n                                >\r\n                                </button>\r\n                                <div className=\"compare-forecast-cards\">\r\n                                    <div className=\"compare-forecast-cards-slider\">\r\n                                        <div className=\"compare-forecast-cards-slider-wrapper\" style={{\r\n                                            'transform': `translateX(-${this.state.Property.id * (100 / this.state.ForecastDailyElements.length)}%)`\r\n                                        }}>\r\n                                            {this.state.ForecastDailyElements.map(fde => <CompareForecastItem key={fde.id} element={fde} />)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div></>\r\n            )\r\n        }\r\n            return( \r\n                <div    style={\r\n                        { \r\n                            backgroundImage: `url(\"/images/bg_comp.jpg\")` \r\n                        }\r\n                }>\r\n                    <div className=\"city-form\">\r\n                    <h1>Wyszukaj miasto dla którego chcesz porównać obecne warunki pogodowe oraz prognozy pogody</h1>\r\n                        <Form \r\n                            value={this.state.value}  \r\n                            handler={this.inputHandler}\r\n                            submit={this.getWeatherCompare}\r\n                        /> \r\n                    </div>\r\n                    {this.state.content}\r\n                </div>\r\n            )\r\n    }\r\n};\r\n\r\nconst weatherIcons = \r\n{\r\n    200:'/images/200.png',\r\n    201:'/images/201.png',\r\n    202:'/images/202.png',\r\n    210:'/images/210.png',\r\n    211:'/images/211.png',\r\n    212:'/images/212.png',\r\n    221:'/images/212.png',\r\n    230:'/images/230D.png',\r\n    231:'/images/231.png',\r\n    232:'/images/232.png',\r\n    300:'/images/300D.png',\r\n    301:'/images/301.png',\r\n    302:'/images/302.png',\r\n    310:'/images/310D.png',\r\n    311:'/images/311.png',\r\n    312:'/images/312.png',\r\n    313:'/images/313_1.png',\r\n    314:'/images/314.png',\r\n    321:'/images/321.png',\r\n    500:'/images/500D.png',\r\n    501:'/images/501.png',\r\n    502:'/images/502.png',\r\n    503:'/images/503.png',\r\n    504:'/images/504.png',\r\n    511:'/images/511.png',\r\n    520:'/images/520D.png',\r\n    521:'/images/521_2.png',\r\n    522:'/images/522_1.png',\r\n    531:'/images/522_1.png',\r\n    600:'/images/600D.png',\r\n    601:'/images/601.png',\r\n    602:'/images/602.png',\r\n    611:'/images/611.png',\r\n    612:'/images/612D.png',\r\n    613:'/images/613.png',\r\n    615:'/images/615D.png',\r\n    616:'/images/616.png',\r\n    620:'/images/620D.png',\r\n    621:'/images/621.png',\r\n    622:'/images/622.png',\r\n    701:'/images/701_2.png',\r\n    711:'/images/701_2.png',\r\n    721:'/images/701_2.png',\r\n    731:'/images/701_2.png',\r\n    741:'/images/701_2.png',\r\n    751:'/images/701_2.png',\r\n    761:'/images/701_2.png',\r\n    762:'/images/701_2.png',\r\n    771:'/images/701_2.png',\r\n    781:'/images/701_2.png',\r\n    800:'/images/800D.png',\r\n    801:'/images/801D.png',\r\n    802:'/images/802D.png',\r\n    803:'/images/803D.png',\r\n    804:'/images/804.png',\r\n    1000:'/images/800D.png',\r\n    1003:'/images/801D.png',\r\n    1006:'/images/802D.png',\r\n    1009:'/images/804.png',\r\n    1030:'/images/701_2.png',\r\n    1063:'/images/500D.png',\r\n    1066:'/images/600.png',\r\n    1069:'/images/613.png',\r\n    1072:'/images/511.png',\r\n    1087:'/images/200.png',\r\n    1114:'/images/602.png',\r\n    1117:'/images/622.png',\r\n    1135:'/images/702_1.png',\r\n    1147:'/images/702_1.png',\r\n    1150:'/images/300D.png',\r\n    1153:'/images/301.png',\r\n    1168:'/images/511.png',\r\n    1171:'/images/501.png',\r\n    1180:'/images/502.png',\r\n    1183:'/images/500D.png',\r\n    1186:'/images/500D.png',\r\n    1189:'/images/501.png',\r\n    1192:'/images/502.png',\r\n    1195:'/images/503.png',\r\n    1198:'/images/511.png',\r\n    1201:'/images/511.png',\r\n    1204:'/images/611.png',\r\n    1207:'/images/612D.png',\r\n    1210:'/images/600D.png',\r\n    1213:'/images/600D.png',\r\n    1216:'/images/601.png',\r\n    1219:'/images/601.png',\r\n    1222:'/images/602.png',\r\n    1225:'/images/602.png',\r\n    1237:'/images/511.png',\r\n    1240:'/images/520.png',\r\n    1243:'/images/521_2.png',\r\n    1246:'/images/522_1.png',\r\n    1249:'/images/612D.png',\r\n    1252:'/images/613.png',\r\n    1255:'/images/612D.png',\r\n    1258:'/images/613.png',\r\n    1261:'/images/511.png',\r\n    1264:'/images/511.png',\r\n    1273:'/images/200.png',\r\n    1276:'/images/201.png',\r\n    1279:'/images/602.png',\r\n    1282:'/images/602.png',\r\n    4201:'/images/502.png',\r\n    4001:'/images/501.png',\r\n    4200:'/images/500D.png',\r\n    6201:'/images/511.png',\r\n    6001:'/images/511.png',\r\n    6200:'/images/511.png',\r\n    6000:'/images/511.png',\r\n    4000:'/images/301.png',\r\n    7101:'/images/511.png',\r\n    7000:'/images/511.png',\r\n    7102:'/images/511.png',\r\n    5101:'/images/602.png',\r\n    5000:'/images/601.png',\r\n    5100:'/images/600D.png',\r\n    5001:'/images/601.png',\r\n    8000:'/images/201.png',\r\n    2100:'/images/701_2.png',\r\n    2000:'/images/701_2.png',\r\n    1001:'/images/804.png',\r\n    1102:'/images/803D.png',\r\n    1101:'/images/802D.png',\r\n    1100:'/images/801D.png',\r\n}\r\n\r\nconst weatherConditions = \r\n{\r\n    4201:'Duży deszcz',\r\n    4001:'Deszcz',\r\n    4200:'Lekki Deszcz',\r\n    6201:'Duży Marznący Deszcz',\r\n    6001:'Marznący Deszcz',\r\n    6200:'Lekki Marznący Deszcz',\r\n    6000:'Marznąca Mrzawka',\r\n    4000:'Mrzawka',\r\n    7101:'Duże Krupy',\r\n    7000:'Krupy',\r\n    7102:'Lekkie Krupy',\r\n    5101:'Duży Śnieg',\r\n    5000:'Śnieg',\r\n    5100:'Lekki Śnieg',\r\n    5001:'Zamieć',\r\n    8000:'Burza',\r\n    2100:'Lekka Mgła',\r\n    2000:'Mgła',\r\n    1001:'Pochmurnie',\r\n    1102:'Przewaga Chmur',\r\n    1101:'Częściowe Zachmurzenie',\r\n    1100:'Przeważnie Słonecznie',\r\n    1000:'Słonecznie',\r\n}\r\n\r\nexport default Compare;"]},"metadata":{},"sourceType":"module"}